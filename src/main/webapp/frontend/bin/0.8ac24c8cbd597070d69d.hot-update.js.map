{"version":3,"sources":["webpack:///./components/editAlbum/ImageRotater.jsx"],"names":["isFileAPISupported","File","pixelRatio","window","devicePixelRatio","drawRoundedRect","context","x","y","width","height","borderRadius","rect","widthMinusRad","heightMinusRad","translate","arc","Math","PI","lineTo","AvatarEditor","React","Component","state","my","mx","image","setCanvas","canvas","isVertical","props","rotate","getBorders","border","Array","isArray","getDimensions","borderX","borderY","canvasWidth","canvasHeight","getImage","cropRect","getCroppingRect","resource","document","createElement","getContext","drawImage","getImageScaledToCanvas","paintImage","getXScale","canvasAspect","imageAspect","min","getYScale","position","scale","croppingRect","xMin","xMax","yMin","yMax","isLargerThanImage","max","isDataURL","str","regex","match","loadImage","loadImageFile","loadImageURL","imageURL","imageObj","Image","onload","handleImageReady","bind","onerror","onLoadFailure","crossOrigin","src","imageFile","reader","FileReader","e","target","result","readAsDataURL","componentDidMount","ReactDOM","findDOMNode","paint","componentDidUpdate","prevProps","prevState","clearRect","onImageChange","imageState","getInitialSize","setState","onImageReady","onLoadSuccess","newHeight","newWidth","dimensions","canvasRatio","imageRatio","componentWillReceiveProps","newProps","scaleFactor","calculatePosition","save","globalCompositeOperation","restore","fillStyle","color","slice","join","borderSizeX","borderSizeY","beginPath","fill","render","defaultStyle","cursor","attributes","style","propTypes","PropTypes","number","oneOfType","string","instanceOf","arrayOf","shape","object","oneOf","func","onPositionChange","disableDrop","bool","defaultProps"],"mappings":"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","file":"0.8ac24c8cbd597070d69d.hot-update.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// const parseDOM = (str) => {\n//     const parser = typeof DOMParser === 'undefined' ? null : new DOMParser()\n//     if (!parser) {\n//         return null\n//     }\n//     return parser.parseFromString(str, 'text/html')\n// }\n//\n// const retrieveImageURL = (dataTransferItems, callback) => {\n//     for (let i = 0; i < dataTransferItems.length; i++) {\n//         let item = dataTransferItems[i]\n//\n//         if (item.type === 'text/html') {\n//             item.getAsString(value => {\n//                 const doc = parseDOM(value)\n//                 const img = doc.querySelector('img')\n//                 if (img && img.src) {\n//                     callback(img.src)\n//                 }\n//             })\n//             break\n//         }\n//     }\n// }\n\nconst isFileAPISupported = typeof File !== 'undefined'\n\n\nconst pixelRatio =\n    typeof window !== 'undefined' && window.devicePixelRatio\n        ? window.devicePixelRatio\n        : 1\n\n// Draws a rounded rectangle on a 2D context.\nconst drawRoundedRect = (context, x, y, width, height, borderRadius) => {\n    if (borderRadius === 0) {\n        context.rect(x, y, width, height)\n    } else {\n        const widthMinusRad = width - borderRadius\n        const heightMinusRad = height - borderRadius\n        context.translate(x, y)\n        context.arc(\n            borderRadius,\n            borderRadius,\n            borderRadius,\n            Math.PI,\n            Math.PI * 1.5\n        )\n        context.lineTo(widthMinusRad, 0)\n        context.arc(\n            widthMinusRad,\n            borderRadius,\n            borderRadius,\n            Math.PI * 1.5,\n            Math.PI * 2\n        )\n        context.lineTo(width, heightMinusRad)\n        context.arc(\n            widthMinusRad,\n            heightMinusRad,\n            borderRadius,\n            Math.PI * 2,\n            Math.PI * 0.5\n        )\n        context.lineTo(borderRadius, height)\n        context.arc(\n            borderRadius,\n            heightMinusRad,\n            borderRadius,\n            Math.PI * 0.5,\n            Math.PI\n        )\n        context.translate(-x, -y)\n    }\n}\n\nclass AvatarEditor extends React.Component {\n    static propTypes = {\n        scale: PropTypes.number,\n        rotate: PropTypes.number,\n        image: PropTypes.oneOfType([\n            PropTypes.string,\n            ...(isFileAPISupported ? [PropTypes.instanceOf(File)] : [])\n        ]),\n        border: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.arrayOf(PropTypes.number)\n        ]),\n        borderRadius: PropTypes.number,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        position: PropTypes.shape({\n            x: PropTypes.number,\n            y: PropTypes.number\n        }),\n        color: PropTypes.arrayOf(PropTypes.number),\n        style: PropTypes.object,\n        crossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\n        onLoadFailure: PropTypes.func,\n        onLoadSuccess: PropTypes.func,\n        onImageReady: PropTypes.func,\n        onImageChange: PropTypes.func,\n        onPositionChange: PropTypes.func,\n\n        disableDrop: PropTypes.bool\n    }\n\n    static defaultProps = {\n        disableDrop: false,\n        scale: 1,\n        rotate: 0,\n        border: 25,\n        borderRadius: 0,\n        width: 200,\n        height: 200,\n        color: [0, 0, 0, 0.5],\n        style: {},\n        onLoadFailure () {},\n        onLoadSuccess () {},\n        onImageReady () {},\n        onImageChange () {},\n        onPositionChange () {}\n    }\n\n    state = {\n        my: null,\n        mx: null,\n        image: {\n            x: 0.5,\n            y: 0.5\n        }\n    }\n\n    isVertical () {\n        return this.props.rotate % 180 !== 0\n    }\n\n    getBorders (border = this.props.border) {\n        return Array.isArray(border) ? border : [border, border]\n    }\n\n    getDimensions () {\n        const { width, height, rotate, border } = this.props\n\n        const canvas = {}\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const canvasWidth = width\n        const canvasHeight = height\n\n        if (this.isVertical()) {\n            canvas.width = canvasHeight\n            canvas.height = canvasWidth\n        } else {\n            canvas.width = canvasWidth\n            canvas.height = canvasHeight\n        }\n\n        canvas.width += borderX * 2\n        canvas.height += borderY * 2\n\n        return {\n            canvas,\n            rotate,\n            width,\n            height,\n            border\n        }\n    }\n\n    getImage () {\n        // get relative coordinates (0 to 1)\n        const cropRect = this.getCroppingRect()\n        const image = this.state.image\n\n        // get actual pixel coordinates\n        cropRect.x = image.resource.width\n        cropRect.y = image.resource.height\n        cropRect.width = image.resource.width\n        cropRect.height = image.resource.height\n\n        // create a canvas with the correct dimensions\n        const canvas = document.createElement('canvas')\n\n        if (this.isVertical()) {\n            canvas.width = cropRect.height\n            canvas.height = cropRect.width\n        } else {\n            canvas.width = cropRect.width\n            canvas.height = cropRect.height\n        }\n\n        // draw the full-size image at the correct position,\n        // the image gets truncated to the size of the canvas.\n        const context = canvas.getContext('2d')\n\n        context.translate(canvas.width / 2, canvas.height / 2)\n        context.rotate(this.props.rotate * Math.PI / 180)\n        context.translate(-(canvas.width / 2), -(canvas.height / 2))\n\n        if (this.isVertical()) {\n            context.translate(\n                (canvas.width - canvas.height) / 2,\n                (canvas.height - canvas.width) / 2\n            )\n        }\n\n        context.drawImage(image.resource, -cropRect.x, -cropRect.y)\n\n        return canvas\n    }\n\n    /**\n     * Get the image scaled to original canvas size.\n     * This was default in 4.x and is now kept as a legacy method.\n     */\n    getImageScaledToCanvas () {\n        const { width, height } = this.getDimensions()\n\n        const canvas = document.createElement('canvas')\n\n        if (this.isVertical()) {\n            canvas.width = height\n            canvas.height = width\n        } else {\n            canvas.width = width\n            canvas.height = height\n        }\n\n        // don't paint a border here, as it is the resulting image\n        this.paintImage(canvas.getContext('2d'), this.state.image, 0, 1)\n\n        return canvas\n    }\n\n    getXScale () {\n        const canvasAspect = this.props.width / this.props.height\n        const imageAspect = this.state.image.width / this.state.image.height\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getYScale () {\n        const canvasAspect = this.props.height / this.props.width\n        const imageAspect = this.state.image.height / this.state.image.width\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getCroppingRect () {\n        const position = this.props.position || {\n                x: this.state.image.x,\n                y: this.state.image.y\n            }\n        const width = 1 / this.props.scale * this.getXScale()\n        const height = 1 / this.props.scale * this.getYScale()\n\n        const croppingRect = {\n            x: position.x - width / 2,\n            y: position.y - height / 2,\n            width,\n            height\n        }\n\n        let xMin = 0\n        let xMax = 1 - croppingRect.width\n        let yMin = 0\n        let yMax = 1 - croppingRect.height\n\n        // If the cropping rect is larger than the image, then we need to change\n        // our maxima & minima for x & y to allow the image to appear anywhere up\n        // to the very edge of the cropping rect.\n        const isLargerThanImage = width > 1 || height > 1\n\n        if (isLargerThanImage) {\n            xMin = -croppingRect.width\n            xMax = 1\n            yMin = -croppingRect.height\n            yMax = 1\n        }\n\n        return {\n            ...croppingRect,\n            x: Math.max(xMin, Math.min(croppingRect.x, xMax)),\n            y: Math.max(yMin, Math.min(croppingRect.y, yMax))\n        }\n        //\n        // const croppingRect = {\n        //     x: this.state.image.x,\n        //     y: this.state.image.y,\n        //     width,\n        //     height\n        // }\n        //\n        // return croppingRect;\n    }\n\n    isDataURL (str) {\n        if (str === null) {\n            return false\n        }\n        const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*\\s*$/i\n        return !!str.match(regex)\n    }\n\n    loadImage (image) {\n        if (isFileAPISupported && image instanceof File) {\n            this.loadImageFile(image)\n        } else if (typeof image === 'string') {\n            this.loadImageURL(image)\n        }\n    }\n\n    loadImageURL (imageURL) {\n        const imageObj = new Image()\n        imageObj.onload = this.handleImageReady.bind(this, imageObj)\n        imageObj.onerror = this.props.onLoadFailure\n        if (!this.isDataURL(imageURL) && this.props.crossOrigin) { imageObj.crossOrigin = this.props.crossOrigin }\n        imageObj.src = imageURL\n    }\n\n    loadImageFile (imageFile) {\n        const reader = new FileReader()\n        reader.onload = e => this.loadImageURL(e.target.result)\n        reader.readAsDataURL(imageFile)\n    }\n\n    componentDidMount () {\n        const context = ReactDOM.findDOMNode(this.canvas).getContext('2d')\n        if (this.props.image) {\n            this.loadImage(this.props.image)\n        }\n        this.paint(context)\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        const canvas = ReactDOM.findDOMNode(this.canvas)\n        const context = canvas.getContext('2d')\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        this.paint(context)\n        this.paintImage(context, this.state.image, this.props.border)\n\n        if (\n            prevProps.image !== this.props.image ||\n            prevProps.width !== this.props.width ||\n            prevProps.height !== this.props.height ||\n            prevProps.position !== this.props.position ||\n            prevProps.scale !== this.props.scale ||\n            prevProps.rotate !== this.props.rotate ||\n            prevState.my !== this.state.my ||\n            prevState.mx !== this.state.mx ||\n            prevState.image.x !== this.state.image.x ||\n            prevState.image.y !== this.state.image.y\n        ) {\n            this.props.onImageChange()\n        }\n    }\n\n    handleImageReady (image) {\n        const imageState = this.getInitialSize(image.width, image.height)\n        imageState.resource = image\n        imageState.x = 0.5\n        imageState.y = 0.5\n        this.setState({ image: imageState }, this.props.onImageReady)\n        this.props.onLoadSuccess(imageState)\n    }\n\n    getInitialSize (width, height) {\n        let newHeight\n        let newWidth\n\n        const dimensions = this.getDimensions()\n        const canvasRatio = dimensions.height / dimensions.width\n        const imageRatio = height / width\n\n        if (canvasRatio > imageRatio) {\n            newHeight = this.getDimensions().height\n            newWidth = width * (newHeight / height)\n        } else {\n            newWidth = this.getDimensions().width\n            newHeight = height * (newWidth / width)\n        }\n\n        return {\n            height: newHeight,\n            width: newWidth\n        }\n    }\n\n    componentWillReceiveProps (newProps) {\n        if (\n            (newProps.image && this.props.image !== newProps.image) ||\n            this.props.width !== newProps.width ||\n            this.props.height !== newProps.height\n        ) {\n            this.loadImage(newProps.image)\n        }\n    }\n\n    paintImage (context, image, border, scaleFactor = pixelRatio) {\n        if (image.resource) {\n            const position = this.calculatePosition(image, border)\n\n            context.save()\n\n            context.translate(context.canvas.width / 2, context.canvas.height / 2)\n            context.rotate(this.props.rotate * Math.PI / 180)\n            context.translate(\n                -(context.canvas.width / 2),\n                -(context.canvas.height / 2)\n            )\n\n            if (this.isVertical()) {\n                context.translate(\n                    (context.canvas.width - context.canvas.height) / 2,\n                    (context.canvas.height - context.canvas.width) / 2\n                )\n            }\n\n            context.scale(scaleFactor, scaleFactor)\n\n            context.globalCompositeOperation = 'destination-over'\n            context.drawImage(\n                image.resource,\n                position.x,\n                position.y,\n                position.width,\n                position.height\n            )\n\n            context.restore()\n        }\n    }\n\n    calculatePosition (image, border) {\n        image = image || this.state.image\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const croppingRect = this.getCroppingRect()\n\n        const width = image.width * this.props.scale\n        const height = image.height * this.props.scale\n\n        // let x = -croppingRect.x * width\n        // let y = -croppingRect.y * height\n\n        let x = -image.x * width\n        let y = -image.y * height\n\n        if (this.isVertical()) {\n            x += borderY\n            y += borderX\n        } else {\n            x += borderX\n            y += borderY\n        }\n\n        return {\n            x,\n            y,\n            height,\n            width\n        }\n    }\n\n    paint (context) {\n        context.save()\n        context.scale(pixelRatio, pixelRatio)\n        context.translate(0, 0)\n        context.fillStyle = 'rgba(' + this.props.color.slice(0, 4).join(',') + ')'\n\n        let borderRadius = this.props.borderRadius\n        const dimensions = this.getDimensions()\n        const [borderSizeX, borderSizeY] = this.getBorders(dimensions.border)\n        const height = dimensions.canvas.height\n        const width = dimensions.canvas.width\n\n        // clamp border radius between zero (perfect rectangle) and half the size without borders (perfect circle or \"pill\")\n        borderRadius = Math.max(borderRadius, 0)\n        borderRadius = Math.min(\n            borderRadius,\n            width / 2 - borderSizeX,\n            height / 2 - borderSizeY\n        )\n\n        context.beginPath()\n        // inner rect, possibly rounded\n        drawRoundedRect(\n            context,\n            borderSizeX,\n            borderSizeY,\n            width - borderSizeX * 2,\n            height - borderSizeY * 2,\n            borderRadius\n        )\n        context.rect(width, 0, -width, height) // outer rect, drawn \"counterclockwise\"\n        context.fill('evenodd')\n\n        context.restore()\n    }\n\n    setCanvas = (canvas) => {\n        this.canvas = canvas\n    }\n\n    render () {\n        const dimensions = this.getDimensions()\n        const defaultStyle = {\n            width: dimensions.canvas.width,\n            height: dimensions.canvas.height,\n            cursor: 'grab'\n        }\n\n        const attributes = {\n            width: dimensions.canvas.width * pixelRatio,\n            height: dimensions.canvas.height * pixelRatio,\n            style: {\n                ...defaultStyle,\n                ...this.props.style\n            }\n        }\n\n        return <canvas ref={this.setCanvas} {...attributes} />\n    }\n}\n\nexport default AvatarEditor\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/ImageRotater.jsx"],"sourceRoot":""}