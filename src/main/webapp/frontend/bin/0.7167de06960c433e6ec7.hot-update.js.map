{"version":3,"sources":["webpack:///./components/editAlbum/EditCanvas.jsx","webpack:///./components/editAlbum/ImageRotater.jsx"],"names":["routesModule","require","EditCanvas","React","Component","constructor","props","state","angle","width","height","getEditedImage","album","image","avatar","getImage","toBlob","img","name","split","length","file","File","http","sendFile","routes","UPLOAD_FOTO","then","downloadedFoto","doPost","FOTO_ROUTE","src","_id","result","newPictures","images","push","newAlbum","Object","assign","cleanImage","imageDownloaded","rotateImage","newAngle","calculateParameters","setState","parseInt","naturalWidth","naturalHeight","onLoad","imgInfo","resource","onChangeImage","console","log","render","ae","isFileAPISupported","pixelRatio","window","devicePixelRatio","AvatarEditor","my","mx","x","y","setCanvas","canvas","isVertical","rotate","getBorders","border","Array","isArray","getDimensions","borderX","borderY","canvasWidth","canvasHeight","document","createElement","context","getContext","translate","Math","PI","drawImage","getImageScaledToCanvas","paintImage","getXScale","canvasAspect","imageAspect","min","getYScale","isDataURL","str","regex","match","loadImage","loadImageFile","loadImageURL","imageURL","imageObj","Image","onload","handleImageReady","bind","onerror","onLoadFailure","crossOrigin","imageFile","reader","FileReader","e","target","readAsDataURL","componentDidMount","componentDidUpdate","prevProps","prevState","ReactDOM","findDOMNode","clearRect","scale","onImageChange","imageState","getInitialSize","onImageReady","onLoadSuccess","newHeight","newWidth","dimensions","canvasRatio","imageRatio","componentWillReceiveProps","newProps","scaleFactor","save","globalCompositeOperation","restore","defaultStyle","cursor","attributes","style","propTypes","PropTypes","number","oneOfType","string","instanceOf","arrayOf","borderRadius","color","object","oneOf","func","onPositionChange","disableDrop","bool","defaultProps"],"mappings":"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","file":"0.7167de06960c433e6ec7.hot-update.js","sourcesContent":["import React from 'react';\nimport './editCanvas.less';\nimport {RotateIcon, SaveIcon} from \"../Icons\";\nimport AvatarEditor from \"./ImageRotater\";\nconst routesModule = require('../../constants/routes');\nimport http from '../../HttpService';\n\nclass EditCanvas extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            angle: 0,\n            width: 200,\n            height: 200\n        }\n    }\n\n    getEditedImage() {\n        const {album, image} = this.props;\n        this.avatar.getImage().toBlob(img => {\n            let name = image.split('/');\n            name = name[name.length - 1];\n            const file = new File([img], name);\n\n            http.sendFile(routesModule.routes.UPLOAD_FOTO, file)\n                .then(downloadedFoto => {\n                    http.doPost(routesModule.routes.FOTO_ROUTE, {\n                        src: downloadedFoto.src,\n                        album: album._id\n                    }).then(result => {\n                            const newPictures = [...album.images];\n                            newPictures.push(result);\n                            const newAlbum = Object.assign({}, {\n                                ...album,\n                                images: newPictures,\n                            });\n\n                            this.props.cleanImage({\n                                imageDownloaded: null,\n                                album: newAlbum\n                            });\n                        });\n                });\n        });\n    }\n\n    rotateImage() {\n        const newAngle = this.state.angle + 90;\n        this.calculateParameters(newAngle);\n    }\n\n    calculateParameters(newAngle) {\n        if(newAngle % 180 == 0) {\n            this.setState({\n                width: parseInt(this.naturalWidth * this.state.height / this.naturalHeight),\n                height: 200,\n                angle : newAngle\n            });\n        } else {\n            this.setState({\n                // height: parseInt(this.naturalHeight * this.state.height / this.naturalWidth),\n                // width: 200,\n                width: parseInt(this.naturalHeight * this.state.height / this.naturalWidth),\n                height: 200,\n                angle : newAngle\n            });\n        }\n    }\n\n    onLoad(imgInfo) {\n        this.naturalWidth = imgInfo.resource.naturalWidth;\n        this.naturalHeight = imgInfo.resource.naturalHeight;\n\n        this.calculateParameters(this.state.angle);\n        // this.setState({\n        //     width: imgInfo.resource.naturalWidth * this.state.height / imgInfo.resource.naturalHeight,\n        // });\n    }\n\n    onChangeImage() {\n        console.log('===========');\n    }\n\n    render() {\n        const {image} = this.props;\n        const {angle, width, height} = this.state;\n        return <div className=\"Edit_canvas\">\n            <AvatarEditor\n                ref={ae => this.avatar = ae}\n                image={image}\n                rotate={angle}\n                width={width}\n                height={height}\n                onLoadSuccess={(imgInfo) => this.onLoad(imgInfo)}\n                //onImageChange={() => this.onChangeImage()}\n                // onDropFile={() => this.onChangeImage()}\n                // onImageReady={() => this.onChangeImage()}\n                //\n                // onPositionChange={() => this.onChangeImage()}\n\n            />\n            <RotateIcon className='rotate_icon' onClick={() => this.rotateImage()}/>\n            <SaveIcon className='save_icon' onClick={() => this.getEditedImage()}/></div>\n    }\n}\n\nexport default EditCanvas;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditCanvas.jsx","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst isFileAPISupported = typeof File !== 'undefined'\n\n\nconst pixelRatio =\n    typeof window !== 'undefined' && window.devicePixelRatio\n        ? window.devicePixelRatio\n        : 1\n\nclass AvatarEditor extends React.Component {\n    static propTypes = {\n        scale: PropTypes.number,\n        rotate: PropTypes.number,\n        image: PropTypes.oneOfType([\n            PropTypes.string,\n            ...(isFileAPISupported ? [PropTypes.instanceOf(File)] : [])\n        ]),\n        border: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.arrayOf(PropTypes.number)\n        ]),\n        borderRadius: PropTypes.number,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        color: PropTypes.arrayOf(PropTypes.number),\n        style: PropTypes.object,\n        crossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\n        onLoadFailure: PropTypes.func,\n        onLoadSuccess: PropTypes.func,\n        onImageReady: PropTypes.func,\n        onImageChange: PropTypes.func,\n        onPositionChange: PropTypes.func,\n\n        disableDrop: PropTypes.bool\n    }\n\n    static defaultProps = {\n        disableDrop: false,\n        scale: 1,\n        rotate: 0,\n        border: 25,\n        borderRadius: 0,\n        width: 200,\n        height: 200,\n        color: [0, 0, 0, 0.5],\n        style: {},\n        onLoadFailure () {},\n        onLoadSuccess () {},\n        onImageReady () {},\n        onImageChange () {},\n        onPositionChange () {}\n    }\n\n    state = {\n        my: null,\n        mx: null,\n        image: {\n            x: 0.5,\n            y: 0.5\n        }\n    }\n\n    isVertical () {\n        return this.props.rotate % 180 !== 0\n    }\n\n    getBorders (border = this.props.border) {\n        return Array.isArray(border) ? border : [border, border]\n    }\n\n    getDimensions () {\n        const { width, height, rotate, border } = this.props\n\n        const canvas = {}\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const canvasWidth = width\n        const canvasHeight = height\n\n        canvas.width = canvasWidth\n        canvas.height = canvasHeight\n\n        canvas.width += borderX * 2\n        canvas.height += borderY * 2\n\n        return {\n            canvas,\n            rotate,\n            width,\n            height,\n            border\n        }\n    }\n\n    getImage () {\n        const image = this.state.image\n\n        // create a canvas with the correct dimensions\n        const canvas = document.createElement('canvas')\n\n        canvas.width = image.resource.width\n        canvas.height = image.resource.height\n\n\n        // draw the full-size image at the correct position,\n        // the image gets truncated to the size of the canvas.\n        const context = canvas.getContext('2d')\n\n        context.translate(canvas.width / 2, canvas.height / 2)\n        context.rotate(this.props.rotate * Math.PI / 180)\n        context.translate(-(canvas.width / 2), -(canvas.height / 2))\n\n        if (this.isVertical()) {\n            context.translate(\n                (canvas.width - canvas.height) / 2,\n                (canvas.height - canvas.width) / 2\n            )\n        }\n\n        context.drawImage(image.resource)\n\n        return canvas\n    }\n\n    /**\n     * Get the image scaled to original canvas size.\n     * This was default in 4.x and is now kept as a legacy method.\n     */\n    getImageScaledToCanvas () {\n        const { width, height } = this.getDimensions()\n\n        const canvas = document.createElement('canvas')\n\n        canvas.width = width\n        canvas.height = height\n\n        // don't paint a border here, as it is the resulting image\n        this.paintImage(canvas.getContext('2d'), this.state.image, 0, 1)\n\n        return canvas\n    }\n\n    getXScale () {\n        const canvasAspect = this.props.width / this.props.height\n        const imageAspect = this.state.image.width / this.state.image.height\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getYScale () {\n        const canvasAspect = this.props.height / this.props.width\n        const imageAspect = this.state.image.height / this.state.image.width\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    isDataURL (str) {\n        if (str === null) {\n            return false\n        }\n        const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*\\s*$/i\n        return !!str.match(regex)\n    }\n\n    loadImage (image) {\n        if (isFileAPISupported && image instanceof File) {\n            this.loadImageFile(image)\n        } else if (typeof image === 'string') {\n            this.loadImageURL(image)\n        }\n    }\n\n    loadImageURL (imageURL) {\n        const imageObj = new Image()\n        imageObj.onload = this.handleImageReady.bind(this, imageObj)\n        imageObj.onerror = this.props.onLoadFailure\n        if (!this.isDataURL(imageURL) && this.props.crossOrigin) { imageObj.crossOrigin = this.props.crossOrigin }\n        imageObj.src = imageURL\n    }\n\n    loadImageFile (imageFile) {\n        const reader = new FileReader()\n        reader.onload = e => this.loadImageURL(e.target.result)\n        reader.readAsDataURL(imageFile)\n    }\n\n    componentDidMount () {\n        if (this.props.image) {\n            this.loadImage(this.props.image)\n        }\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        const canvas = ReactDOM.findDOMNode(this.canvas)\n        const context = canvas.getContext('2d')\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        this.paintImage(context, this.state.image, this.props.border)\n\n        if (\n            prevProps.image !== this.props.image ||\n            prevProps.width !== this.props.width ||\n            prevProps.height !== this.props.height ||\n            prevProps.scale !== this.props.scale ||\n            prevProps.rotate !== this.props.rotate ||\n            prevState.my !== this.state.my ||\n            prevState.mx !== this.state.mx ||\n            prevState.image.x !== this.state.image.x ||\n            prevState.image.y !== this.state.image.y\n        ) {\n            this.props.onImageChange()\n        }\n    }\n\n    handleImageReady (image) {\n        const imageState = this.getInitialSize(image.width, image.height)\n        imageState.resource = image\n        imageState.x = 0.5\n        imageState.y = 0.5\n        this.setState({ image: imageState }, this.props.onImageReady)\n        this.props.onLoadSuccess(imageState)\n    }\n\n    getInitialSize (width, height) {\n        let newHeight\n        let newWidth\n\n        const dimensions = this.getDimensions()\n        const canvasRatio = dimensions.height / dimensions.width\n        const imageRatio = height / width\n\n        if (canvasRatio > imageRatio) {\n            newHeight = this.getDimensions().height\n            newWidth = width * (newHeight / height)\n        } else {\n            newWidth = this.getDimensions().width\n            newHeight = height * (newWidth / width)\n        }\n\n        return {\n            height: newHeight,\n            width: newWidth\n        }\n    }\n\n    componentWillReceiveProps (newProps) {\n        if (\n            (newProps.image && this.props.image !== newProps.image) ||\n            this.props.width !== newProps.width ||\n            this.props.height !== newProps.height\n        ) {\n            this.loadImage(newProps.image)\n        }\n    }\n\n    paintImage (context, image, scaleFactor = pixelRatio) {\n        if (image.resource) {\n\n            context.save()\n\n            context.translate(context.canvas.width / 2, context.canvas.height / 2)\n            context.rotate(this.props.rotate * Math.PI / 180)\n            context.translate(\n                -(context.canvas.width / 2),\n                -(context.canvas.height / 2)\n            )\n\n            if (this.isVertical()) {\n                context.translate(\n                    (context.canvas.width - context.canvas.height) / 2,\n                    (context.canvas.height - context.canvas.width) / 2\n                )\n            }\n\n            context.scale(scaleFactor, scaleFactor)\n\n            context.globalCompositeOperation = 'destination-over'\n            context.drawImage(\n                image.resource,\n                0,\n                0,\n                image.width,\n                image.height\n            )\n\n            context.restore()\n        }\n    }\n\n    setCanvas = (canvas) => {\n        this.canvas = canvas\n    }\n\n    render () {\n        if(!this.state.image.resource) {\n            return null;\n        }\n        const dimensions = this.getDimensions()\n\n        const defaultStyle = {\n            width: this.state.image.width,\n            height: this.state.image.height,\n            cursor: 'grab'\n        }\n\n        const attributes = {\n            width: this.state.image.width,\n            height: this.state.image.height,\n            style: {\n                ...defaultStyle,\n                ...this.props.style\n            }\n        }\n\n        return <canvas ref={this.setCanvas} {...attributes} />\n    }\n}\n\nexport default AvatarEditor\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/ImageRotater.jsx"],"sourceRoot":""}