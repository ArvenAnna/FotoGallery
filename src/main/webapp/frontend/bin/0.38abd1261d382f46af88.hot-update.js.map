{"version":3,"sources":["webpack:///./components/editAlbum/EditAlbum.jsx"],"names":["routesModule","require","EditAlbum","connect","store","deleteFotoFromAlbum","saveFotoDescription","saveAlbumDescription","deleteAlbum","saveItemsOrder","React","Component","constructor","props","state","dragStarted","dragFrom","dragFromEl","dragObj","openPicture","openedAlbum","album","openedDialog","imageDownloaded","imageLoading","imageLoadStarted","albumLoading","componentDidMount","loadAlbum","setState","http","doGet","routes","GET_ALBUM","match","params","id","then","result","images","sort","x","y","order","forEach","image","src","Date","toISOString","catch","e","Alert","error","response","data","openDetails","picture","openAlbumDetails","onCrossClick","deleteItem","length","_id","newPictures","filter","p","newAlbum","Object","assign","removeAlbum","history","push","changeState","obj","editedPicture","find","pinput","value","name","ptextarea","text","editedAlbum","ainput","atextarea","description","uploadFile","file","sendFile","UPLOAD_FOTO","downloadedFoto","isVideo","doPost","FOTO_ROUTE","onImageLoad","onImageError","loadImage","imageObj","Image","onload","bind","onerror","renderEditAlbumCard","renderImages","map","target","replaceImage","renderFileInput","renderEditCanvas","renderChangeFotoTextInfoDialog","i","t","renderChangeAlbumTextInfoDialog","renderDeleteDialog","render"],"mappings":"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","file":"0.38abd1261d382f46af88.hot-update.js","sourcesContent":["import React from 'react';\nimport './editAlbum.less';\nimport FileInput from \"../fileInput/FileInput\";\nimport {CrossIcon, SaveIcon} from \"../Icons\";\nimport Card from \"./Card\";\nimport http from '../../HttpService';\nimport connect from \"react-redux/es/connect/connect\";\nimport {\n    deleteAlbum, deleteFotoFromAlbum, saveAlbumDescription,\n    saveFotoDescription, saveItemsOrder\n} from \"../../actions/albumActions\";\nimport Dialog from \"../dialog/Dialog\";\nimport EditCanvas from \"./EditCanvas\";\nimport {isVideo} from \"../../utils/index\";\nimport * as styles from \"../../constants/styles\";\nconst routesModule = require('../../constants/routes');\nimport Loader from 'react-loaders';\nimport 'loaders.css/src/animations/ball-scale-multiple.scss';\nimport 'loaders.css/src/animations/ball-grid-pulse.scss';\nimport Alert from 'react-s-alert';\n\n\n@connect(store => ({}), {\n    deleteFotoFromAlbum,\n    saveFotoDescription,\n    saveAlbumDescription,\n    deleteAlbum,\n    saveItemsOrder\n})\nclass EditAlbum extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dragStarted: false,\n            dragFrom: null,\n            dragFromEl: null,\n            dragObj: null,\n            openPicture: null,\n            openedAlbum: false,\n            album: null,\n            openedDialog: false,\n            imageDownloaded: false,\n            imageLoading: true,\n            imageLoadStarted: false,\n            albumLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this.loadAlbum();\n    }\n\n    loadAlbum() {\n        this.setState({albumLoading: true});\n        http.doGet(routesModule.routes.GET_ALBUM(this.props.match.params.id))\n            .then(result => {\n                result.images.sort((x, y) => x.order - y.order);\n                result.images.forEach(image => image.src = image.src + '?forceUpdate=' + new Date().toISOString())\n                this.setState({album: result, albumLoading: false});\n            })\n            .catch(e => Alert.error(e.response.data.error, {}));\n    }\n\n    openDetails(picture) {\n        this.setState({openPicture: picture});\n    }\n\n    openAlbumDetails() {\n        this.setState({openedAlbum: true});\n    }\n\n    onCrossClick() {\n        this.setState({openPicture: null, openedAlbum: false});\n    }\n\n    deleteItem(picture) {\n        if (this.state.album.images.length == 1) {\n            this.setState({openedDialog: true});\n            return;\n        }\n\n        this.props.deleteFotoFromAlbum(picture._id);\n        const newPictures = this.state.album.images.filter(p => p._id != picture._id);\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        })\n        this.setState({album: newAlbum});\n    }\n\n    removeAlbum() {\n        this.props.deleteAlbum(this.state.album._id);\n        this.props.history.push('/');\n    }\n\n    changeState(obj) {\n        this.setState(obj);\n    }\n\n    saveFotoDescription(picture) {\n        const newPictures = [...this.state.album.images];\n        const editedPicture = this.state.album.images.find(p => p._id == picture._id);\n        if (this.pinput.value) editedPicture.name = this.pinput.value;\n        if (this.ptextarea.value) editedPicture.text = this.ptextarea.value;\n\n        this.props.saveFotoDescription(this.state.album._id, editedPicture);\n\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        });\n        this.setState({album: newAlbum, openPicture: null});\n    }\n\n    saveAlbumDescription() {\n        const editedAlbum = Object.assign({}, {...this.state.album});\n        if (this.ainput.value) editedAlbum.name = this.ainput.value;\n        if (this.atextarea.value) editedAlbum.description = this.atextarea.value;\n\n        this.props.saveAlbumDescription(editedAlbum);\n\n        this.setState({album: editedAlbum, openedAlbum: false});\n    }\n\n    uploadFile(file) {\n        http.sendFile(routesModule.routes.UPLOAD_FOTO, file)\n            .then(downloadedFoto => {\n                if (isVideo(downloadedFoto.src)) {\n                    http.doPost(routesModule.routes.FOTO_ROUTE, {\n                        src: downloadedFoto.src,\n                        album: this.state.album._id\n                    }).then(result => {\n                        const newPictures = [...this.state.album.images];\n                        newPictures.push(result);\n                        const newAlbum = Object.assign({}, {\n                            ...this.state.album,\n                            images: newPictures,\n                        });\n\n                        this.setState({\n                            //imageDownloaded: null,\n                            album: newAlbum\n                        });\n                    }).catch(e => Alert.error(e.response.data.error, {}));\n                } else {\n                    this.setState({\n                        imageDownloaded: downloadedFoto.src\n                    });\n                }\n\n            })\n            .catch(e => Alert.error(e.response.data.error, {}));\n    }\n\n    onImageLoad() {\n        this.setState({imageLoading: false, });\n    }\n\n    onImageError() {\n        Alert.error(\"Image loading failed\", {});\n        this.setState({imageLoading: false});\n    }\n\n    loadImage(src) {\n        this.setState({imageLoadStarted: true});\n        const imageObj = new Image()\n        imageObj.onload = this.onImageLoad.bind(this);\n        imageObj.onerror = this.onImageError.bind(this);\n        imageObj.src = src;\n    }\n\n    renderEditAlbumCard() {\n        if(!this.state.imageLoadStarted) this.loadImage(this.state.album.images[0].src);\n        return <div className='edit_album_card' key=\"edit_album_card\">\n            {this.state.imageLoading ? <Loader type=\"ball-scale-multiple\"/> : isVideo(this.state.album.images[0].src)\n                ? <video className=\"album_image\"\n                         height={styles.picture_edit_height}\n                         width={styles.picture_edit_width}\n                         controls=\"controls\">\n                    <source src={this.state.album.images[0].src}/>\n                </video>\n                : <img className='album_image'\n                       src={this.state.album.images[0].src}/>}\n            <div className='album_name' onClick={() => this.openAlbumDetails()}>{this.state.album.name}</div>\n            <CrossIcon className='cross_icon' onClick={() => this.setState({openedDialog: true})}/>\n        </div>\n    }\n\n    renderImages() {\n        return this.state.album.images.sort((x, y) => x.order - y.order).map(p => <Card\n            key={p._id}\n            picture={p}\n            pictures={this.state.album.images}\n            openDetails={(p) => this.openDetails(p)}\n            deleteItem={(p) => this.deleteItem(p)}\n            replaceImage={(target) => this.replaceImage(target)}\n            openPicture={this.state.openPicture}\n            changeDragState={(obj) => this.changeState(obj)}\n            dragState={this.state}\n            updateOrder={(album) => this.props.saveItemsOrder(album)}\n            loadAlbum={() => this.loadAlbum()}\n        />)\n    }\n\n    renderFileInput() {\n        return !this.state.imageDownloaded && <FileInput className='edit_file_input'\n                                                         disabled={this.state.openPicture}\n                                                         label='Choose new foto'\n                                                         uploadFile={(file) => this.uploadFile(file)}\n            />\n    }\n\n    renderEditCanvas() {\n        return this.state.imageDownloaded && !isVideo(this.state.imageDownloaded) && <EditCanvas\n                image={this.state.imageDownloaded}\n                cleanImage={obj => this.changeState(obj)}\n                album={this.state.album}\n            />\n    }\n\n    renderChangeFotoTextInfoDialog() {\n        return this.state.openPicture &&\n            <div className='new_text_overlay'>\n                <div className='new_text'>\n                    <div className=\"new_text_caption\">Enter foto name and description:</div>\n                    <SaveIcon className='save_icon' onClick={() => this.saveFotoDescription(this.state.openPicture)}/>\n                    <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                    <input defaultValue={this.state.openPicture.name} ref={i => this.pinput = i}/>\n                    <textarea defaultValue={this.state.openPicture.text} ref={t => this.ptextarea = t}/>\n                </div>\n            </div>\n    }\n\n    renderChangeAlbumTextInfoDialog() {\n        return this.state.openedAlbum &&\n            <div className='new_text_overlay'>\n                <div className='new_text'>\n                    <div className=\"new_text_caption\">Enter album name and description:</div>\n                    <SaveIcon className='save_icon' onClick={() => this.saveAlbumDescription()}/>\n                    <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                    <input defaultValue={this.state.album.name} ref={i => this.ainput = i}/>\n                    <textarea defaultValue={this.state.album.description} ref={t => this.atextarea = t}/>\n                </div>\n            </div>\n    }\n\n    renderDeleteDialog() {\n        return this.state.openedDialog && <Dialog onClick={() => this.removeAlbum()}\n                                                  onClose={() => this.setState({openedDialog: false})}\n                                                  text=\"Do you really want to delete the album?\"/>\n    }\n\n\n    render() {\n        const {album, albumLoading} = this.state;\n        if(albumLoading) return <Loader type=\"ball-grid-pulse\" className='Data_loader'/>;\n        if (!album) return null;\n\n        return <React.Fragment>\n            {this.renderEditAlbumCard()}\n            {this.renderImages()}\n            {this.renderFileInput()}\n            {this.renderEditCanvas()}\n            {this.renderChangeFotoTextInfoDialog()}\n            {this.renderChangeAlbumTextInfoDialog()}\n            {this.renderDeleteDialog()}\n        </React.Fragment>;\n    }\n}\n\nexport default EditAlbum;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditAlbum.jsx"],"sourceRoot":""}