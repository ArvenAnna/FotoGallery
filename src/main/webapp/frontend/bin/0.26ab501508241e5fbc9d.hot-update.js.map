{"version":3,"sources":["webpack:///./components/editAlbum/EditAlbum.jsx"],"names":["routesModule","require","EditAlbum","connect","store","deleteFotoFromAlbum","saveFotoDescription","saveAlbumDescription","deleteAlbum","saveItemsOrder","React","Component","constructor","props","state","dragStarted","dragFrom","dragFromEl","dragObj","openPicture","openedAlbum","album","openedDialog","componentDidMount","loadAlbum","http","doGet","routes","GET_ALBUM","match","params","id","then","result","images","sort","x","y","order","forEach","image","src","Date","toISOString","setState","openDetails","picture","openAlbumDetails","onCrossClick","deleteItem","length","_id","newPictures","filter","p","newAlbum","Object","assign","removeAlbum","history","push","changeDragState","obj","editedPicture","find","pinput","value","name","ptextarea","text","editedAlbum","ainput","atextarea","description","uploadFile","file","sendFile","UPLOAD_FOTO","downloadedFoto","render","map","target","replaceImage","i","t"],"mappings":"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","file":"0.26ab501508241e5fbc9d.hot-update.js","sourcesContent":["import React from 'react';\nimport './editAlbum.less';\nimport FileInput from \"../fileInput/FileInput\";\nimport {CrossIcon, SaveIcon} from \"../Icons\";\nimport Card from \"./Card\";\nimport http from '../../HttpService';\nimport connect from \"react-redux/es/connect/connect\";\nimport {\n    deleteAlbum, deleteFotoFromAlbum, fetchAlbums, saveAlbumDescription,\n    saveFotoDescription, saveItemsOrder\n} from \"../../actions/albumActions\";\nimport Dialog from \"../dialog/Dialog\";\nconst routesModule = require('../../constants/routes');\n\n@connect(store => ({}), {\n    deleteFotoFromAlbum,\n    saveFotoDescription,\n    saveAlbumDescription,\n    deleteAlbum,\n   // fetchAlbums,\n    saveItemsOrder\n})\nclass EditAlbum extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dragStarted: false,\n            dragFrom: null,\n            dragFromEl: null,\n            dragObj: null,\n            openPicture: null,\n            openedAlbum: false,\n            album: null,\n            openedDialog: false\n        }\n    }\n\n    componentDidMount() {\n        this.loadAlbum();\n    }\n\n    loadAlbum() {\n        http.doGet(routesModule.routes.GET_ALBUM(this.props.match.params.id))\n            .then(result => {\n                result.images.sort((x, y) => x.order - y.order);\n                result.images.forEach(image => image.src = image.src + '?forceUpdate=' + new Date().toISOString())\n                this.setState({album: result})\n            });\n    }\n\n    openDetails(picture) {\n        this.setState({openPicture: picture});\n    }\n\n    openAlbumDetails() {\n        this.setState({openedAlbum: true});\n    }\n\n    onCrossClick() {\n        this.setState({openPicture: null, openedAlbum: false});\n    }\n\n    deleteItem(picture) {\n        if (this.state.album.images.length == 1) {\n            this.setState({openedDialog: true});\n            return;\n        }\n\n        this.props.deleteFotoFromAlbum(picture._id);\n        const newPictures = this.state.album.images.filter(p => p._id != picture._id);\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        })\n        this.setState({album: newAlbum});\n    }\n\n    removeAlbum() {\n        this.props.deleteAlbum(this.state.album._id);\n        this.props.history.push('/');\n    }\n\n    changeDragState(obj) {\n        this.setState(obj);\n    }\n\n    saveFotoDescription(picture) {\n        const newPictures = [...this.state.album.images];\n        const editedPicture = this.state.album.images.find(p => p._id == picture._id);\n        if (this.pinput.value) editedPicture.name = this.pinput.value;\n        if (this.ptextarea.value) editedPicture.text = this.ptextarea.value;\n\n        this.props.saveFotoDescription(this.state.album._id, editedPicture);\n\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        });\n        this.setState({album: newAlbum, openPicture: null});\n    }\n\n    saveAlbumDescription() {\n        const editedAlbum = Object.assign({}, {...this.state.album});\n        if (this.ainput.value) editedAlbum.name = this.ainput.value;\n        if (this.atextarea.value) editedAlbum.description = this.atextarea.value;\n\n        this.props.saveAlbumDescription(editedAlbum);\n\n        this.setState({album: editedAlbum, openedAlbum: false});\n    }\n\n    uploadFile(file) {\n        http.sendFile(routesModule.routes.UPLOAD_FOTO, file)\n               .then(downloadedFoto => {\n                   \n                   // http.doPost(routesModule.routes.FOTO_ROUTE, {\n                   //     src: downloadedFoto.src,\n                   //     album: this.state.album._id\n                   // }).then(result => {\n                   //         const newPictures = [...this.state.album.images];\n                   //         newPictures.push(result);\n                   //         const newAlbum = Object.assign({}, {\n                   //             ...this.state.album,\n                   //             images: newPictures,\n                   //         });\n                   //         this.setState({album: newAlbum});\n                   //         //this.props.fetchAlbums();\n                   //     });\n               });\n    }\n\n    render() {\n        const {openPicture, album, openedAlbum, openedDialog} = this.state;\n        return album && (\n                    <div className='edit_container'>\n                        <div className='edit_album_card'>\n                            <img className='album_image' src={album.images[0].src}/>\n                            <div className='album_name' onClick={() => this.openAlbumDetails()}>{album.name}</div>\n                            <CrossIcon className='cross_icon' onClick={() => this.setState({openedDialog: true})}/>\n                        </div>\n                        {album.images.sort((x, y) => x.order - y.order).map(p => <Card\n                            key={p._id}\n                            picture={p}\n                            pictures={album.images}\n                            openDetails={(p) => this.openDetails(p)}\n                            deleteItem={(p) => this.deleteItem(p)}\n                            replaceImage={(target) => this.replaceImage(target)}\n                            openPicture={openPicture}\n                            changeDragState={(obj) => this.changeDragState(obj)}\n                            dragState={this.state}\n                            updateOrder={(album) => this.props.saveItemsOrder(album)}\n                            loadAlbum={() => this.loadAlbum()}\n                        />)}\n                        <FileInput className='new_image'\n                                   disabled={openPicture}\n                                   label='Choose new foto'\n                                   uploadFile={(file) => this.uploadFile(file)}\n                        />\n                        {openPicture &&\n                        <div className='new_text'>\n                            <input defaultValue={openPicture.name} ref={i => this.pinput = i}/>\n                            <textarea defaultValue={openPicture.text} ref={t => this.ptextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveFotoDescription(openPicture)}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedAlbum &&\n                        <div className='new_text'>\n                            <input defaultValue={album.name} ref={i => this.ainput = i}/>\n                            <textarea defaultValue={album.description} ref={t => this.atextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveAlbumDescription()}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedDialog && <Dialog onClick={() => this.removeAlbum()}\n                        onClose={() => this.setState({openedDialog: false})}\n                                                 text=\"Do you really want to delete the album?\"/>}\n                    </div>\n            );\n    }\n}\n\nexport default EditAlbum;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditAlbum.jsx"],"sourceRoot":""}