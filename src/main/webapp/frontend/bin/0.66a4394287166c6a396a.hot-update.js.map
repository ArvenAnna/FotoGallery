{"version":3,"sources":["webpack:///./components/editAlbum/EditAlbum.jsx"],"names":["routesModule","require","EditAlbum","connect","store","deleteFotoFromAlbum","saveFotoDescription","saveAlbumDescription","deleteAlbum","fetchAlbums","saveItemsOrder","React","Component","constructor","props","state","dragStarted","dragFrom","dragFromEl","dragObj","openPicture","openedAlbum","album","openedDialog","componentDidMount","http","doGet","routes","GET_ALBUM","match","params","id","then","result","setState","openDetails","picture","openAlbumDetails","onCrossClick","deleteItem","images","length","newPictures","filter","p","newAlbum","Object","assign","removeAlbum","history","push","changeDragState","obj","editedPicture","find","pinput","value","name","ptextarea","text","editedAlbum","ainput","atextarea","description","uploadFile","file","sendFile","UPLOAD_FOTO","doPost","FOTO_ROUTE","render","src","sort","x","y","order","map","target","replaceImage","i","t"],"mappings":"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","file":"0.66a4394287166c6a396a.hot-update.js","sourcesContent":["import React from 'react';\nimport './editAlbum.less';\nimport FileInput from \"../fileInput/FileInput\";\nimport {CrossIcon, SaveIcon} from \"../Icons\";\nimport Card from \"./Card\";\nimport http from '../../HttpService';\nimport connect from \"react-redux/es/connect/connect\";\nimport {\n    deleteAlbum, deleteFotoFromAlbum, fetchAlbums, saveAlbumDescription,\n    saveFotoDescription, saveItemsOrder\n} from \"../../actions/albumActions\";\nimport Dialog from \"../dialog/Dialog\";\nconst routesModule = require('../../constants/routes');\n\n@connect(store => ({}), {\n    deleteFotoFromAlbum,\n    saveFotoDescription,\n    saveAlbumDescription,\n    deleteAlbum,\n    fetchAlbums,\n    saveItemsOrder\n})\nclass EditAlbum extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dragStarted: false,\n            dragFrom: null,\n            dragFromEl: null,\n            dragObj: null,\n            openPicture: null,\n            openedAlbum: false,\n            album: null,\n            openedDialog: false\n        }\n    }\n\n    componentDidMount() {\n        http.doGet(routesModule.routes.GET_ALBUM(this.props.match.params.id))\n            .then(result => this.setState({album: result}));\n    }\n\n    openDetails(picture) {\n        this.setState({openPicture: picture});\n    }\n\n    openAlbumDetails() {\n        this.setState({openedAlbum: true});\n    }\n\n    onCrossClick() {\n        this.setState({openPicture: null, openedAlbum: false});\n    }\n\n    deleteItem(picture) {\n        if (this.state.album.images.length == 1) {\n            this.setState({openedDialog: true});\n            return;\n        }\n\n        this.props.deleteFotoFromAlbum(picture.id, this.state.album.id);\n        const newPictures = this.state.album.images.filter(p => p.id != picture.id);\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        })\n        this.setState({album: newAlbum});\n    }\n\n    removeAlbum() {\n        this.props.deleteAlbum(this.state.album.id);\n        this.props.history.push('/');\n    }\n\n    changeDragState(obj) {\n        this.setState(obj);\n    }\n\n    saveFotoDescription(picture) {\n        const newPictures = [...this.state.album.images];\n        const editedPicture = this.state.album.images.find(p => p.id == picture.id);\n        if (this.pinput.value) editedPicture.name = this.pinput.value;\n        if (this.ptextarea.value) editedPicture.text = this.ptextarea.value;\n\n        this.props.saveFotoDescription(this.state.album.id, editedPicture);\n\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        });\n        this.setState({album: newAlbum, openPicture: null});\n    }\n\n    saveAlbumDescription() {\n        const editedAlbum = Object.assign({}, {...this.state.album});\n        if (this.ainput.value) editedAlbum.name = this.ainput.value;\n        if (this.atextarea.value) editedAlbum.description = this.atextarea.value;\n\n        this.props.saveAlbumDescription(editedAlbum);\n\n        this.setState({album: editedAlbum, openedAlbum: false});\n    }\n\n    uploadFile(file) {\n        http.sendFile(routesModule.routes.UPLOAD_FOTO, file)\n               .then(id => {\n                   http.doPost(routesModule.routes.FOTO_ROUTE, id)\n                       .then(result => {\n                           const newPictures = [...this.state.album.images];\n                           newPictures.push(result);\n                           const newAlbum = Object.assign({}, {\n                               ...this.state.album,\n                               images: newPictures,\n                           });\n                           this.setState({album: newAlbum});\n                           this.props.fetchAlbums();\n                       });\n               });\n    }\n\n    render() {\n        const {openPicture, album, openedAlbum, openedDialog} = this.state;\n        return album && (\n                    <div className='edit_container'>\n                        <div className='edit_album_card'>\n                            <img className='album_image' src={album.images[0].src}/>\n                            <div className='album_name' onClick={() => this.openAlbumDetails()}>{album.name}</div>\n                            <CrossIcon className='cross_icon' onClick={() => this.setState({openedDialog: true})}/>\n                        </div>\n                        {album.images.sort((x, y) => x.order - y.order).map(p => <Card\n                            key={p.id}\n                            picture={p}\n                            pictures={album.images}\n                            openDetails={(p) => this.openDetails(p)}\n                            deleteItem={(p) => this.deleteItem(p)}\n                            replaceImage={(target) => this.replaceImage(target)}\n                            openPicture={openPicture}\n                            changeDragState={(obj) => this.changeDragState(obj)}\n                            dragState={this.state}\n                            updateOrder={(album) => this.props.saveItemsOrder(album)}\n                        />)}\n                        <FileInput className='new_image'\n                                   disabled={openPicture}\n                                   label='Choose new foto'\n                                   uploadFile={(file) => this.uploadFile(file)}\n                        />\n                        {openPicture &&\n                        <div className='new_text'>\n                            <input defaultValue={openPicture.name} ref={i => this.pinput = i}/>\n                            <textarea defaultValue={openPicture.text} ref={t => this.ptextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveFotoDescription(openPicture)}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedAlbum &&\n                        <div className='new_text'>\n                            <input defaultValue={album.name} ref={i => this.ainput = i}/>\n                            <textarea defaultValue={album.description} ref={t => this.atextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveAlbumDescription()}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedDialog && <Dialog onClick={() => this.removeAlbum()}\n                        onClose={() => this.setState({openedDialog: false})}\n                                                 text=\"Do you really want to delete the album?\"/>}\n                    </div>\n            );\n    }\n}\n\nexport default EditAlbum;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditAlbum.jsx"],"sourceRoot":""}