{"version":3,"sources":["webpack:///./components/picture/Preview.jsx","webpack:///./components/picture/PreviewImageFrame.jsx"],"names":["BottomSection","styled","div","props","imageWidth","increase","constants","preview_frame_color","decrease","Modal","animationTime","Preview","React","Component","constructor","parseInt","state","imageHeight","animate","currentSlide","main","setImageWidth","width","setState","clearAnimate","slide","close","clearAnimation","calculateTextWidth","imgWidth","bottomSection","document","getElementsByClassName","style","currentStyle","window","getComputedStyle","paddings","parseFloat","paddingLeft","paddingRight","calculateTextHeight","caption","bottomSectionStyle","paddingTop","paddingBottom","captionStyle","height","render","images","editRoute","s","r","name","text","PreviewImageFrame","img","current","find","src","currentIndex","indexOf","left","right","length","index","componentDidMount","containerStyle","cont","addEventListener","recalculateWidth","componentWillUnmount","removeEventListener","naturalWidth","naturalHeight","preview_border_width","innerWidth","onLoad","e","target","newImages","onCrossClick","onArrowClick","arrow","isVideo","node"],"mappings":"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","file":"0.dd144a45cbc9db649dfc.hot-update.js","sourcesContent":["import React from \"react\";\nimport styled, {keyframes} from 'styled-components';\n//import { Scrollbars } from 'react-custom-scrollbars';\nimport './preview.less';\nimport PreviewImageFrame from \"./PreviewImageFrame\";\nimport constants from '../../constants/styles';\nimport Scroll from \"../scroll/Scroll\";\n\nconst BottomSection = styled.div`\n   width: ${props => props.imageWidth};\n`\n\nconst increase = (props) => keyframes`\n   0% {\n      height: 0;\n      width: 0;\n      background-color: transparent;\n  }\n  50% {\n      height: 90%;\n      width: ${props.imageWidth};\n      background-color: transparent;  \n  }\n  100% {\n      background-color: ${constants.preview_frame_color};\n  }\n`\n\nconst decrease = (props) => keyframes`\n   0% {\n      background-color: ${constants.preview_frame_color};\n   }\n   50% {\n      height: 90%;\n      width: ${props.imageWidth};\n      background-color: transparent;\n  }\n  100% {\n      height: 0;\n      width: 0;\n      background-color: transparent;\n  }\n`\n\nconst Modal = styled.div`\n&.increase {\n  .magnify_modal_img_frame {\n    animation: ${increase} ${props => props.animationTime}s ease;\n  }\n}\n\n&.decrease {\n  .magnify_modal_img_frame {\n    animation: ${decrease} ${props => props.animationTime}s ease;\n  }\n}\n`\n\nclass Preview extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.animationTime = parseInt(constants['preview_animation_duration']);\n\n        this.state = {\n            imageWidth: 0,\n            imageHeight: 0,\n            animate: '',\n            currentSlide: props.main\n        };\n    }\n\n    setImageWidth(width) {\n        this.setState({\n            imageWidth: width,\n        });\n    }\n\n    clearAnimate(slide) {\n        this.setState({\n            animate: '',\n            currentSlide: slide\n        });\n    }\n\n    close() {\n        this.props.close();\n    }\n\n    clearAnimation(slide) {\n        this.setState({\n            animate: ''\n        });\n    }\n\n\n    calculateTextWidth(imgWidth) {\n        const bottomSection = document.getElementsByClassName('magnify_modal_img_frame_bottom')[0];\n        if(bottomSection){\n            const style = bottomSection.currentStyle || window.getComputedStyle(bottomSection);\n            const paddings = parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n            return parseFloat(imgWidth) - paddings;\n        }\n        return 0;\n    }\n\n    calculateTextHeight() {\n        const bottomSection = document.getElementsByClassName('magnify_modal_img_frame_bottom')[0];\n\n        if(bottomSection && this.caption){\n            const bottomSectionStyle = bottomSection.currentStyle || window.getComputedStyle(bottomSection);\n            const paddings = parseFloat(bottomSectionStyle.paddingTop) + parseFloat(bottomSectionStyle.paddingBottom);\n\n            const captionStyle = this.caption.currentStyle || window.getComputedStyle(this.caption);\n            return parseFloat(bottomSectionStyle.height) - paddings - parseFloat(captionStyle.height);\n        }\n        return 0;\n    }\n\n    render() {\n        const {animate, imageWidth, imageHeight} = this.state;\n        const {images, main} = this.props;\n\n        return (\n            <Modal className={`magnify_modal`}\n                   imageWidth={imageWidth}\n                   animationTime={this.animationTime}>\n                <div className={`magnify_modal_img_frame`}>\n                    <PreviewImageFrame main={main}\n                                       images={images}\n                                       editRoute={this.props.editRoute}\n                                       setImageWidth={(width) => {\n                                           this.setImageWidth(width)\n                                       }}\n                                       close={() => this.close()}\n                                       clearAnimate={(s) => this.clearAnimate(s)}\n                    />\n\n                    <BottomSection className='magnify_modal_img_frame_bottom'\n                                   imageWidth={imageWidth}>\n\n                        <div className='magnify_modal_img_frame_bottom_caption' ref={r => this.caption = r }>{this.state.currentSlide.name}</div>\n\n                        <Scroll height={this.calculateTextHeight()}\n                                width={this.calculateTextWidth(imageWidth)}\n                                className='magnify_modal_img_frame_bottom_text'\n                                progress={true}>\n                            <div>{this.state.currentSlide.text}</div>\n                        </Scroll>\n\n                    </BottomSection>\n\n                </div>\n            </Modal>\n        );\n    }\n}\n\nexport default Preview;\n\n\n// WEBPACK FOOTER //\n// ./components/picture/Preview.jsx","import React from \"react\";\nimport {CrossIcon, EditIcon, LeftArrowIcon, RightArrowIcon} from \"../Icons\";\nimport \"./preview.less\";\nimport {Link} from \"react-router-dom\";\nimport {isVideo} from \"../../utils/index\";\nimport constants from '../../constants/styles';\n\nclass PreviewImageFrame extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.img = null;\n\n    const current = props.images.find(img => img.src === props.main.src);\n    const currentIndex = props.images.indexOf(current);\n\n    this.state = {\n      imageWidth: 0,\n      main: props.main,\n      left: currentIndex > 0,\n      right: currentIndex < (props.images.length - 1),\n        images: props.images,\n        index: currentIndex\n    };\n  }\n\n  componentDidMount() {\n    const containerStyle = this.cont.currentStyle || window.getComputedStyle(this.cont);\n    this.height = parseFloat(containerStyle.height);\n    window.addEventListener('resize', () => this.recalculateWidth());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.recalculateWidth());\n  }\n\n  recalculateWidth() {\n    const naturalWidth = this.state.images[this.state.index].naturalWidth;\n    const naturalHeight = this.state.images[this.state.index].naturalHeight;\n\n    if (naturalWidth && naturalHeight &&  this.cont) {\n        const containerStyle = this.cont.currentStyle || window.getComputedStyle(this.cont);\n        this.height = parseFloat(containerStyle.height);\n        let width = naturalWidth * this.height/ naturalHeight;\n        if((width + parseFloat(constants.preview_border_width) * 2) > window.innerWidth) {\n            width  = window.innerWidth - parseFloat(constants.preview_border_width) * 2;\n            //const height = e.target.naturalHeight * width / e.target.naturalWidth;\n        }\n        this.cont.style.width = width;\n        this.props.setImageWidth(width);\n    }\n\n  }\n\n  // getImageContainerWidth() {\n  //   const img = this.img;\n  //   if (!img) return 0;\n  //   const imageRect = img.getBoundingClientRect();\n  //   return imageRect.width;\n  // }\n\n  onLoad(e) {\n    let width = e.target.naturalWidth * this.height / e.target.naturalHeight;\n    let newImages = [...this.state.images];\n    newImages[this.state.index].naturalWidth = e.target.naturalWidth;\n    newImages[this.state.index].naturalHeight = e.target.naturalHeight;\n      if((width + parseFloat(constants.preview_border_width) * 2) > window.innerWidth) {\n          width  = window.innerWidth - parseFloat(constants.preview_border_width) * 2;\n          const height = e.target.naturalHeight * width / e.target.naturalWidth;\n      }\n    this.setState({images: newImages});\n    this.props.setImageWidth(width);\n  }\n\n  onCrossClick() {\n    this.props.close();\n  }\n\n  onArrowClick(arrow) {\n    const {images} = this.props;\n    //const current = images.find(img => img === this.state.main);\n    const currentIndex = images.indexOf(this.state.main);\n    let main;\n\n    if (arrow === 'left' && currentIndex > 0) {\n      main = images[currentIndex - 1];\n      this.setState({\n        main,\n        left: (currentIndex - 1) > 0,\n        right: (currentIndex - 1) < (images.length - 1),\n        index: currentIndex - 1\n      }, this.recalculateWidth);\n    }\n\n    if (arrow === 'right' && currentIndex < (images.length - 1)) {\n        main = images[currentIndex + 1];\n        this.setState({\n        main,\n        left: (currentIndex + 1) > 0,\n        right: (currentIndex + 1) < (images.length - 1),\n        index: currentIndex + 1\n      }, this.recalculateWidth)\n    }\n\n    this.props.clearAnimate(main);\n  }\n\n  render() {\n    const {main, left, right} = this.state;\n    const {images, editRoute} = this.props;\n\n    return (<div className='magnify_modal_img_frame_container' ref={cont => this.cont = cont}>\n        <CrossIcon className='cross' onClick={() => this.onCrossClick()}/>\n            {editRoute && <Link to={this.props.editRoute}><EditIcon className='edit'/></Link>}\n        {left && <div className='left_arrow'>\n          <LeftArrowIcon onClick={() => this.onArrowClick('left')}/>\n        </div>}\n        {right && <div className='right_arrow'>\n          <RightArrowIcon onClick={() => this.onArrowClick('right')}/>\n        </div>}\n        <div className='counter_container'>\n          <div className='counter'>{`${(images.indexOf(main) + 1)} of ${images.length}`}</div>\n        </div>\n        {isVideo(main.src)\n            ? <video controls=\"controls\"\n                     ref={node => this.img = node}\n                     onLoad={(e) => this.onLoad(e)}\n                     className=\"image_preview\"\n                     >\n              <source src={main.src}/>\n            </video>\n            :<img onLoad={(e) => this.onLoad(e)}\n                  src={main.src} className='image_preview'\n                  ref={node => this.img = node}/>}\n      </div>\n    );\n  }\n}\n\nexport default PreviewImageFrame;\n\n\n// WEBPACK FOOTER //\n// ./components/picture/PreviewImageFrame.jsx"],"sourceRoot":""}