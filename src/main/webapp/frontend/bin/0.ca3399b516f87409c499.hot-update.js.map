{"version":3,"sources":["webpack:///./actions/albumActions.js","webpack:///./constants/routes.js","webpack:///./components/editAlbum/EditAlbum.jsx"],"names":["routesModule","require","albumsRequest","type","REQ_ALBUMS","setAlbums","albums","fetchAlbums","dispatch","http","doGet","routes","GET_ALBUMS","then","result","deleteFotoFromAlbum","id","album","doDelete","DELETE_FOTO","saveFotoDescription","image","doPut","UPDATE_FOTO","saveAlbumDescription","UPDATE_ALBUM","apiPrefix","ALBUM_ROUTE","GET_ALBUM","FOTO_PATH","exports","EditAlbum","connect","store","React","Component","constructor","props","state","dragStarted","dragFrom","dragFromEl","dragObj","openPicture","openedAlbum","componentDidMount","match","params","setState","openDetails","picture","openAlbumDetails","onCrossClick","deleteItem","newPictures","images","filter","p","newAlbum","Object","assign","changeDragState","obj","editedPicture","find","pinput","value","name","ptextarea","text","editedAlbum","ainput","atextarea","description","render","console","dir","src","sort","x","y","order","map","target","replaceImage","i","t"],"mappings":"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","file":"0.ca3399b516f87409c499.hot-update.js","sourcesContent":["import * as types from '../constants/ActionTypes';\nimport http from '../HttpService';\nconst routesModule = require('../constants/routes');\n\nexport function albumsRequest() {\n    return {\n        type: types.REQ_ALBUMS\n    };\n}\n\nexport function setAlbums(albums) {\n    return {\n        type: types.SET_ALBUMS,\n        albums\n    };\n}\n\nexport function fetchAlbums() {\n    return dispatch => {\n        dispatch(albumsRequest());\n        return http\n            .doGet(routesModule.routes.GET_ALBUMS)\n            .then(result => dispatch(setAlbums(result)));\n    }\n}\n\n// export function deleteFotoRequest() {\n//     return {\n//         type: types.REQ_ALBUMS\n//     };\n// }\n\nexport function deleteFotoFromAlbum(id, album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doDelete(routesModule.routes.DELETE_FOTO(id, album))\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveFotoDescription(album, image) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.UPDATE_FOTO(album), image)\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveAlbumDescription(album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.UPDATE_ALBUM, album)\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./actions/albumActions.js","const apiPrefix = '/api/';\n\nconst routes = {\n    GET_ALBUMS: `${apiPrefix}albums`,\n\n    ALBUM_ROUTE: `${apiPrefix}album`,\n    GET_ALBUM: (id) => `${apiPrefix}album?id=${id}`,\n\n    DELETE_FOTO: (id, album) => `${apiPrefix}foto?album=${album}&id=${id}`,\n    UPDATE_FOTO: (album) => `${apiPrefix}foto?album=${album}`,\n    FOTO_PATH: `${apiPrefix}foto`,\n\n    UPDATE_ALBUM: `${apiPrefix}foto?album=${album}&id=${id}`\n\n\n\n    // GET_RECEPTS: (departId) => `/recept_list.req?departId=${departId}`,\n    // GET_RECEPT: (receptId) => `/recept.req?receptId=${receptId}`,\n    // GET_INGRIDIENTS: '/ing_list.req',\n    // GET_TAGS: '/tags.req',\n    //\n    // POST_INGRIDIENTS: '/ingridient.req',\n    // POST_CREATE_RECEPT: '/recept.req',\n    //\n    // UPLOAD_FILE: '/file.req',\n    //\n    // IMAGE_CATALOG: '/foto/'\n};\n\nexports.routes = routes;\n\n\n\n\n// WEBPACK FOOTER //\n// ./constants/routes.js","import React from 'react';\nimport './editAlbum.less';\nimport FileInput from \"../fileInput/FileInput\";\nimport {CrossIcon, SaveIcon} from \"../Icons\";\nimport Card from \"./Card\";\nimport http from '../../HttpService';\nimport connect from \"react-redux/es/connect/connect\";\nimport {deleteFotoFromAlbum, saveFotoDescription} from \"../../actions/albumActions\";\nconst routesModule = require('../../constants/routes');\n\n@connect(store => ({}), {\n    deleteFotoFromAlbum,\n    saveFotoDescription,\n    saveAlbumDescription\n})\nclass EditAlbum extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dragStarted: false,\n            dragFrom: null,\n            dragFromEl: null,\n            dragObj: null,\n            openPicture: null,\n            openedAlbum: false,\n            album: null\n        }\n    }\n\n    componentDidMount() {\n        http.doGet(routesModule.routes.GET_ALBUM(this.props.match.params.id))\n            .then(result => this.setState({album: result}));\n    }\n\n    openDetails(picture) {\n        this.setState({openPicture: picture});\n    }\n\n    openAlbumDetails() {\n        this.setState({openedAlbum: true});\n    }\n\n    onCrossClick() {\n        this.setState({openPicture: null, openedAlbum: false});\n    }\n\n    deleteItem(picture) {\n        this.props.deleteFotoFromAlbum(picture.id, this.state.album.id);\n        const newPictures = this.state.album.images.filter(p => p.id != picture.id);\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        })\n        this.setState({album: newAlbum});\n    }\n\n    changeDragState(obj) {\n        this.setState(obj);\n    }\n\n    saveFotoDescription(picture) {\n        const newPictures = [...this.state.album.images];\n        const editedPicture = this.state.album.images.find(p => p.id == picture.id);\n        if (this.pinput.value) editedPicture.name = this.pinput.value;\n        if (this.ptextarea.value) editedPicture.text = this.ptextarea.value;\n\n        this.props.saveFotoDescription(this.state.album.id, editedPicture);\n\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        });\n        this.setState({album: newAlbum, openPicture: null});\n    }\n\n    saveAlbumDescription() {\n        const editedAlbum = Object.assign({}, {...this.state.album});\n        if (this.ainput.value) editedAlbum.name = this.ainput.value;\n        if (this.atextarea.value) editedAlbum.description = this.atextarea.value;\n\n        //this.props.saveAlbumDescription(this.state.album.id, editedPicture);\n\n        this.setState({album: editedAlbum, openedAlbum: false});\n    }\n\n    render() {\n        const {openPicture, album, openedAlbum} = this.state;\n        if(album) {\n            console.dir(album.images);\n\n        }\n        return album && (\n                    <div className='edit_container'>\n                        <div className='edit_album_card'>\n                            <img className='album_image' src={album.images[0].src}/>\n                            <div className='album_name' onClick={() => this.openAlbumDetails()}>{album.name}</div>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>\n                        {album.images.sort((x, y) => x.order - y.order).map(p => <Card\n                            key={p.id}\n                            picture={p}\n                            pictures={album.images}\n                            openDetails={(p) => this.openDetails(p)}\n                            deleteItem={(p) => this.deleteItem(p)}\n                            replaceImage={(target) => this.replaceImage(target)}\n                            openPicture={openPicture}\n                            changeDragState={(obj) => this.changeDragState(obj)}\n                            dragState={this.state}\n                        />)}\n                        <FileInput className='new_image' disabled={openPicture} label='Choose new foto'/>\n                        {openPicture &&\n                        <div className='new_text'>\n                            <input defaultValue={openPicture.name} ref={i => this.pinput = i}/>\n                            <textarea defaultValue={openPicture.text} ref={t => this.ptextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveFotoDescription(openPicture)}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedAlbum &&\n                        <div className='new_text'>\n                            <input defaultValue={album.name} ref={i => this.ainput = i}/>\n                            <textarea defaultValue={album.description} ref={t => this.atextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveAlbumDescription()}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                    </div>\n            );\n    }\n}\n\nexport default EditAlbum;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditAlbum.jsx"],"sourceRoot":""}