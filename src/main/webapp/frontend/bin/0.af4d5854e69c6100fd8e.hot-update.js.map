{"version":3,"sources":["webpack:///./components/editAlbum/ImageRotater.jsx"],"names":["isFileAPISupported","File","pixelRatio","window","devicePixelRatio","AvatarEditor","React","Component","state","my","mx","image","x","y","setCanvas","canvas","isVertical","props","rotate","getBorders","border","Array","isArray","getDimensions","width","height","borderX","borderY","canvasWidth","canvasHeight","getImage","document","createElement","resource","context","getContext","translate","Math","PI","drawImage","getImageScaledToCanvas","paintImage","getXScale","canvasAspect","imageAspect","min","getYScale","getCroppingRect","position","scale","croppingRect","xMin","xMax","yMin","yMax","isLargerThanImage","max","isDataURL","str","regex","match","loadImage","loadImageFile","loadImageURL","imageURL","imageObj","Image","onload","handleImageReady","bind","onerror","onLoadFailure","crossOrigin","src","imageFile","reader","FileReader","e","target","result","readAsDataURL","componentDidMount","componentDidUpdate","prevProps","prevState","ReactDOM","findDOMNode","clearRect","onImageChange","imageState","getInitialSize","setState","onImageReady","onLoadSuccess","newHeight","newWidth","dimensions","canvasRatio","imageRatio","componentWillReceiveProps","newProps","scaleFactor","save","globalCompositeOperation","restore","render","defaultStyle","cursor","attributes","style","propTypes","PropTypes","number","oneOfType","string","instanceOf","arrayOf","borderRadius","color","object","oneOf","func","onPositionChange","disableDrop","bool","defaultProps"],"mappings":"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","file":"0.af4d5854e69c6100fd8e.hot-update.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst isFileAPISupported = typeof File !== 'undefined'\n\n\nconst pixelRatio =\n    typeof window !== 'undefined' && window.devicePixelRatio\n        ? window.devicePixelRatio\n        : 1\n\nclass AvatarEditor extends React.Component {\n    static propTypes = {\n        scale: PropTypes.number,\n        rotate: PropTypes.number,\n        image: PropTypes.oneOfType([\n            PropTypes.string,\n            ...(isFileAPISupported ? [PropTypes.instanceOf(File)] : [])\n        ]),\n        border: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.arrayOf(PropTypes.number)\n        ]),\n        borderRadius: PropTypes.number,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        color: PropTypes.arrayOf(PropTypes.number),\n        style: PropTypes.object,\n        crossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\n        onLoadFailure: PropTypes.func,\n        onLoadSuccess: PropTypes.func,\n        onImageReady: PropTypes.func,\n        onImageChange: PropTypes.func,\n        onPositionChange: PropTypes.func,\n\n        disableDrop: PropTypes.bool\n    }\n\n    static defaultProps = {\n        disableDrop: false,\n        scale: 1,\n        rotate: 0,\n        border: 25,\n        borderRadius: 0,\n        width: 200,\n        height: 200,\n        color: [0, 0, 0, 0.5],\n        style: {},\n        onLoadFailure () {},\n        onLoadSuccess () {},\n        onImageReady () {},\n        onImageChange () {},\n        onPositionChange () {}\n    }\n\n    state = {\n        my: null,\n        mx: null,\n        image: {\n            x: 0.5,\n            y: 0.5\n        }\n    }\n\n    isVertical () {\n        return this.props.rotate % 180 !== 0\n    }\n\n    getBorders (border = this.props.border) {\n        return Array.isArray(border) ? border : [border, border]\n    }\n\n    getDimensions () {\n        const { width, height, rotate, border } = this.props\n\n        const canvas = {}\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const canvasWidth = width\n        const canvasHeight = height\n\n        canvas.width = canvasWidth\n        canvas.height = canvasHeight\n\n        canvas.width += borderX * 2\n        canvas.height += borderY * 2\n\n        return {\n            canvas,\n            rotate,\n            width,\n            height,\n            border\n        }\n    }\n\n    getImage () {\n        // get relative coordinates (0 to 1)\n        //const cropRect = this.getCroppingRect()\n        const image = this.state.image\n\n        // get actual pixel coordinates\n        // cropRect.x = image.resource.width\n        // cropRect.y = image.resource.height\n        // cropRect.width = image.resource.width\n        // cropRect.height = image.resource.height\n\n        // create a canvas with the correct dimensions\n        const canvas = document.createElement('canvas')\n\n        canvas.width = image.resource.width\n        canvas.height = image.resource.height\n\n\n        // draw the full-size image at the correct position,\n        // the image gets truncated to the size of the canvas.\n        const context = canvas.getContext('2d')\n\n        context.translate(canvas.width / 2, canvas.height / 2)\n        context.rotate(this.props.rotate * Math.PI / 180)\n        context.translate(-(canvas.width / 2), -(canvas.height / 2))\n\n        if (this.isVertical()) {\n            context.translate(\n                (canvas.width - canvas.height) / 2,\n                (canvas.height - canvas.width) / 2\n            )\n        }\n\n        context.drawImage(image.resource)\n\n        return canvas\n    }\n\n    /**\n     * Get the image scaled to original canvas size.\n     * This was default in 4.x and is now kept as a legacy method.\n     */\n    getImageScaledToCanvas () {\n        const { width, height } = this.getDimensions()\n\n        const canvas = document.createElement('canvas')\n\n        if (this.isVertical()) {\n            canvas.width = height\n            canvas.height = width\n        } else {\n            canvas.width = width\n            canvas.height = height\n        }\n\n        // don't paint a border here, as it is the resulting image\n        this.paintImage(canvas.getContext('2d'), this.state.image, 0, 1)\n\n        return canvas\n    }\n\n    getXScale () {\n        const canvasAspect = this.props.width / this.props.height\n        const imageAspect = this.state.image.width / this.state.image.height\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getYScale () {\n        const canvasAspect = this.props.height / this.props.width\n        const imageAspect = this.state.image.height / this.state.image.width\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getCroppingRect () {\n        const position =  {\n                x: this.state.image.x,\n                y: this.state.image.y\n            }\n        const width = 1 / this.props.scale * this.getXScale()\n        const height = 1 / this.props.scale * this.getYScale()\n\n        const croppingRect = {\n            x: position.x - width / 2,\n            y: position.y - height / 2,\n            width,\n            height\n        }\n\n        let xMin = 0\n        let xMax = 1 - croppingRect.width\n        let yMin = 0\n        let yMax = 1 - croppingRect.height\n\n        // If the cropping rect is larger than the image, then we need to change\n        // our maxima & minima for x & y to allow the image to appear anywhere up\n        // to the very edge of the cropping rect.\n        const isLargerThanImage = width > 1 || height > 1\n\n        if (isLargerThanImage) {\n            xMin = -croppingRect.width\n            xMax = 1\n            yMin = -croppingRect.height\n            yMax = 1\n        }\n\n        return {\n            ...croppingRect,\n            x: Math.max(xMin, Math.min(croppingRect.x, xMax)),\n            y: Math.max(yMin, Math.min(croppingRect.y, yMax))\n        }\n        //\n        // const croppingRect = {\n        //     x: this.state.image.x,\n        //     y: this.state.image.y,\n        //     width,\n        //     height\n        // }\n        //\n        // return croppingRect;\n    }\n\n    isDataURL (str) {\n        if (str === null) {\n            return false\n        }\n        const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*\\s*$/i\n        return !!str.match(regex)\n    }\n\n    loadImage (image) {\n        if (isFileAPISupported && image instanceof File) {\n            this.loadImageFile(image)\n        } else if (typeof image === 'string') {\n            this.loadImageURL(image)\n        }\n    }\n\n    loadImageURL (imageURL) {\n        const imageObj = new Image()\n        imageObj.onload = this.handleImageReady.bind(this, imageObj)\n        imageObj.onerror = this.props.onLoadFailure\n        if (!this.isDataURL(imageURL) && this.props.crossOrigin) { imageObj.crossOrigin = this.props.crossOrigin }\n        imageObj.src = imageURL\n    }\n\n    loadImageFile (imageFile) {\n        const reader = new FileReader()\n        reader.onload = e => this.loadImageURL(e.target.result)\n        reader.readAsDataURL(imageFile)\n    }\n\n    componentDidMount () {\n        if (this.props.image) {\n            this.loadImage(this.props.image)\n        }\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        const canvas = ReactDOM.findDOMNode(this.canvas)\n        const context = canvas.getContext('2d')\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        this.paintImage(context, this.state.image, this.props.border)\n\n        if (\n            prevProps.image !== this.props.image ||\n            prevProps.width !== this.props.width ||\n            prevProps.height !== this.props.height ||\n            prevProps.scale !== this.props.scale ||\n            prevProps.rotate !== this.props.rotate ||\n            prevState.my !== this.state.my ||\n            prevState.mx !== this.state.mx ||\n            prevState.image.x !== this.state.image.x ||\n            prevState.image.y !== this.state.image.y\n        ) {\n            this.props.onImageChange()\n        }\n    }\n\n    handleImageReady (image) {\n        const imageState = this.getInitialSize(image.width, image.height)\n        imageState.resource = image\n        imageState.x = 0.5\n        imageState.y = 0.5\n        this.setState({ image: imageState }, this.props.onImageReady)\n        this.props.onLoadSuccess(imageState)\n    }\n\n    getInitialSize (width, height) {\n        let newHeight\n        let newWidth\n\n        const dimensions = this.getDimensions()\n        const canvasRatio = dimensions.height / dimensions.width\n        const imageRatio = height / width\n\n        if (canvasRatio > imageRatio) {\n            newHeight = this.getDimensions().height\n            newWidth = width * (newHeight / height)\n        } else {\n            newWidth = this.getDimensions().width\n            newHeight = height * (newWidth / width)\n        }\n\n        return {\n            height: newHeight,\n            width: newWidth\n        }\n    }\n\n    componentWillReceiveProps (newProps) {\n        if (\n            (newProps.image && this.props.image !== newProps.image) ||\n            this.props.width !== newProps.width ||\n            this.props.height !== newProps.height\n        ) {\n            this.loadImage(newProps.image)\n        }\n    }\n\n    paintImage (context, image, border, scaleFactor = pixelRatio) {\n        if (image.resource) {\n\n            const width = image.width * this.props.scale\n            const height = image.height * this.props.scale\n\n            context.save()\n\n            context.translate(context.canvas.width / 2, context.canvas.height / 2)\n            context.rotate(this.props.rotate * Math.PI / 180)\n            context.translate(\n                -(context.canvas.width / 2),\n                -(context.canvas.height / 2)\n            )\n\n            if (this.isVertical()) {\n                context.translate(\n                    (context.canvas.width - context.canvas.height) / 2,\n                    (context.canvas.height - context.canvas.width) / 2\n                )\n            }\n\n            context.scale(scaleFactor, scaleFactor)\n\n            context.globalCompositeOperation = 'destination-over'\n            context.drawImage(\n                image.resource,\n                0,\n                0,\n                width,\n                height\n            )\n\n            context.restore()\n        }\n    }\n\n    setCanvas = (canvas) => {\n        this.canvas = canvas\n    }\n\n    render () {\n        const dimensions = this.getDimensions()\n        const defaultStyle = {\n            width: dimensions.canvas.width,\n            height: dimensions.canvas.height,\n            cursor: 'grab'\n        }\n\n        const attributes = {\n            width: dimensions.canvas.width * pixelRatio,\n            height: dimensions.canvas.height * pixelRatio,\n            style: {\n                ...defaultStyle,\n                ...this.props.style\n            }\n        }\n\n        return <canvas ref={this.setCanvas} {...attributes} />\n    }\n}\n\nexport default AvatarEditor\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/ImageRotater.jsx"],"sourceRoot":""}