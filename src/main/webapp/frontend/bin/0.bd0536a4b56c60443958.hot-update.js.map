{"version":3,"sources":["webpack:///./components/picture/GMap.js"],"names":["GMap","connect","store","saveFotoInformation","React","Component","constructor","props","foto","images","index","state","selectedPlace","currentLocation","componentDidMount","position","setState","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","onCrossClick","close","onMarkerClick","marker","e","console","dir","onInfoWindowClose","g","log","onMapClicked","r","latLng","Object","assign","changeCoordinates","render","google","a","b","c","name","GoogleApiWrapper","apiKey"],"mappings":"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","file":"0.bd0536a4b56c60443958.hot-update.js","sourcesContent":["import React from 'react';\nimport {CrossIcon} from \"../Icons\";\nimport './map.less';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {saveFotoInformation} from \"../../actions/albumActions\";\n\n@connect(store => ({}), {\n    saveFotoInformation\n})\nclass GMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const foto = props.images[props.index];\n        this.state = {\n            selectedPlace: {},\n            currentLocation: {},\n            foto: foto\n        }\n    }\n\n    componentDidMount() {\n        if (foto.position) {\n            this.setState({ currentLocation: foto.position });\n        } else if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((pos) => {\n                const coords = pos.coords;\n                this.setState({\n                    currentLocation: {\n                        lat: coords.latitude,\n                        lng: coords.longitude\n                    }\n                })\n            })\n        }\n    }\n\n    onCrossClick() {\n        this.props.close();\n    }\n\n    onMarkerClick(props, marker, e) {\n        console.dir(props);\n        console.dir(marker);\n        console.dir(e);\n    }\n\n    onInfoWindowClose(g) {\n        console.log(g);\n    }\n\n    onMapClicked(g, e, r) {\n        console.log(r.latLng.lat());\n        const foto = Object.assign({}, this.state.foto);\n        foto.position = {lat: r.latLng.lat(), lng: r.latLng.lng()};\n        this.setState({foto});\n        this.props.changeCoordinates(foto);\n        this.props.saveFotoInformation(foto);\n    }\n\n    render() {\n        const {foto} = this.state;\n\n        if (!this.state.currentLocation || !this.state.currentLocation.lat) return null;\n\n        return <div className=\"map_container\">\n            <CrossIcon className='cross'\n                       onClick={() => this.onCrossClick()}/>\n            <Map\n                google={this.props.google}\n                zoom={14}\n                initialCenter={ this.state.currentLocation }\n                onClick={(a, b, c) => this.onMapClicked(a, b, c)}\n            >\n\n                {/*{this.props.fotos && this.props.fotos.map(foto => <Marker*/}\n                        {/*name={foto.name}*/}\n                        {/*position={foto.location}*/}\n                {/*/>)}*/}\n\n                {foto.position &&\n                <Marker onClick={(a,b,c) => this.onMarkerClick(a,b,c)}\n                        title={foto.name}\n                        name={foto.name}\n                        position={foto.position}\n                />}\n                {/*<Marker*/}\n                    {/*title={'The marker`s title will appear as a tooltip.'}*/}\n                    {/*name={'SOMA'}*/}\n                    {/*position={{lat: 37.778519, lng: -122.405640}} />*/}\n                {/*<Marker*/}\n                    {/*name={'Dolores park'}*/}\n                    {/*position={{lat: 37.759703, lng: -122.428093}}*/}\n                    {/*title={'The marker`s title will appear as a tooltip.'}*/}\n                    {/*onClick={this.onMarkerClick}*/}\n                {/*/>*/}\n                {/*<Marker />*/}\n                {/*<Marker*/}\n                    {/*name={'Your position'}*/}\n                    {/*position={{lat: 37.762391, lng: -122.439192}}*/}\n                    {/*icon={{*/}\n                        {/*url: \"/path/to/custom_icon.png\",*/}\n                        {/*anchor: new google.maps.Point(32,32),*/}\n                        {/*scaledSize: new google.maps.Size(64,64)*/}\n                    {/*}} />*/}\n\n                {/*<InfoWindow onClose={this.onInfoWindowClose}>*/}\n                    {/*<div>*/}\n                        {/*<h1>{this.state.selectedPlace.name}</h1>*/}\n                    {/*</div>*/}\n                {/*</InfoWindow>*/}\n            </Map>\n        </div>\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyDWNe8nbXT808Y9VT3ei5JbVBR-jBK-Y0s\")\n})(GMap)\n\n\n// WEBPACK FOOTER //\n// ./components/picture/GMap.js"],"sourceRoot":""}