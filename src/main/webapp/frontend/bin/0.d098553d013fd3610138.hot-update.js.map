{"version":3,"sources":["webpack:///./HttpService.js"],"names":["HttpService","constructor","http","axios","create","headers","responseType","doGet","route","transformResponse","get","then","result","data","doDelete","delete","doPost","request","post","doPut","put","JSON","stringify","sendFile","file","fd","FormData","append","undefined"],"mappings":";;;;;;;;AAAA;;IAEMA,W,GAAN,MAAMA,WAAN,CAAkB;AACdC,kBAAc;AACV,aAAKC,IAAL,GAAY,6CAAAC,CAAMC,MAAN,CAAa;AACrBC,qBAAS,EAAC,gBAAgB,kBAAjB,EADY;AAErBC,0BAAc;AAFO,SAAb,CAAZ;AAIH;;AAEDC,UAAMC,KAAN,EAAaC,iBAAb,EAAgC;AAC5B,eAAO,KAAKP,IAAL,CACFQ,GADE,CACEF,KADF,EAEFG,IAFE,CAEGC,UAAU;AACZ,gBAAIH,iBAAJ,EAAuB;AACnB,uBAAOA,kBAAkBG,OAAOC,IAAzB,CAAP;AACH;AACD,mBAAOD,OAAOC,IAAd;AACH,SAPE,CAAP;AAQH;;AAEDC,aAASN,KAAT,EAAgBC,iBAAhB,EAAmC;AAC/B,eAAO,KAAKP,IAAL,CACFa,MADE,CACKP,KADL,EAEFG,IAFE,CAEGC,UAAU;AACZ,gBAAIH,iBAAJ,EAAuB;AACnB,uBAAOA,kBAAkBG,OAAOC,IAAzB,CAAP;AACH;AACD,mBAAOD,OAAOC,IAAd;AACH,SAPE,CAAP;AAQH;;AAEDG,WAAOR,KAAP,EAAcS,OAAd,EAAuB;AACnB,eAAO,KAAKf;AACR;AADG,SAEFgB,IAFE,CAEGV,KAFH,EAEUS,OAFV,EAGFN,IAHE,CAGGC,UAAUA,OAAOC,IAHpB,CAAP;AAIH;;AAEDM,UAAMX,KAAN,EAAaS,OAAb,EAAsB;AAClB,eAAO,KAAKf,IAAL,CACFkB,GADE,CACEZ,KADF,EACSa,KAAKC,SAAL,CAAeL,OAAf,CADT,EAEFN,IAFE,CAEGC,UAAUA,OAAOC,IAFpB,CAAP;AAGH;;AAEDU,aAASf,KAAT,EAAgBgB,IAAhB,EAAsB;AAClB,YAAIC,KAAK,IAAIC,QAAJ,EAAT;AACAD,WAAGE,MAAH,CAAU,MAAV,EAAkBH,IAAlB;AACA;AACA,eAAO,KAAKtB,IAAL,CACFgB,IADE,CACGV,KADH,EACUiB,EADV,EACc;AACbpB,qBAAS,EAAC,gBAAgBuB,SAAjB;AADI,SADd,EAIFjB,IAJE,CAIGC,UAAUA,OAAOC,IAJpB,CAAP;AAKH;AApDa,C;;;AAuDlB,yDAAe,IAAIb,WAAJ,EAAf,E","file":"0.d098553d013fd3610138.hot-update.js","sourcesContent":["import axios from 'axios';\n\nclass HttpService {\n    constructor() {\n        this.http = axios.create({\n            headers: {\"Content-Type\": \"application/json\"},\n            responseType: 'json'\n        });\n    }\n\n    doGet(route, transformResponse) {\n        return this.http\n            .get(route)\n            .then(result => {\n                if (transformResponse) {\n                    return transformResponse(result.data)\n                }\n                return result.data\n            });\n    }\n\n    doDelete(route, transformResponse) {\n        return this.http\n            .delete(route)\n            .then(result => {\n                if (transformResponse) {\n                    return transformResponse(result.data)\n                }\n                return result.data\n            });\n    }\n\n    doPost(route, request) {\n        return this.http\n            //.post(route, JSON.stringify(request))\n            .post(route, request)\n            .then(result => result.data);\n    }\n\n    doPut(route, request) {\n        return this.http\n            .put(route, JSON.stringify(request))\n            .then(result => result.data);\n    }\n\n    sendFile(route, file) {\n        let fd = new FormData();\n        fd.append('file', file);\n        //fd.append('receptId', receptId);\n        return this.http\n            .post(route, fd, {\n                headers: {'Content-Type': undefined}\n            })\n            .then(result => result.data);\n    }\n}\n\nexport default new HttpService();\n\n\n// WEBPACK FOOTER //\n// ./HttpService.js"],"sourceRoot":""}