{"version":3,"sources":["webpack:///./components/editAlbum/ImageRotater.jsx"],"names":["parseDOM","str","parser","DOMParser","parseFromString","retrieveImageURL","dataTransferItems","callback","i","length","item","type","getAsString","value","doc","img","querySelector","src","isTouchDevice","window","navigator","msMaxTouchPoints","isFileAPISupported","File","draggableEvents","touch","react","down","mouseDown","drag","drop","move","mouseMove","up","mouseUp","native","desktop","deviceEvents","pixelRatio","devicePixelRatio","drawRoundedRect","context","x","y","width","height","borderRadius","rect","widthMinusRad","heightMinusRad","translate","arc","Math","PI","lineTo","AvatarEditor","React","Component","state","my","mx","image","handleMouseDown","e","event","preventDefault","setState","handleDragOver","handleDrop","stopPropagation","dataTransfer","files","items","props","onDropFile","loadImageFile","retrieveImageUrl","loadImage","setCanvas","canvas","isVertical","rotate","getBorders","border","Array","isArray","getDimensions","borderX","borderY","canvasWidth","canvasHeight","getImage","cropRect","getCroppingRect","resource","document","createElement","getContext","drawImage","getImageScaledToCanvas","paintImage","getXScale","canvasAspect","imageAspect","min","getYScale","position","scale","croppingRect","xMin","xMax","yMin","yMax","isLargerThanImage","max","isDataURL","regex","match","loadImageURL","imageURL","imageObj","Image","onload","handleImageReady","bind","onerror","onLoadFailure","crossOrigin","imageFile","reader","FileReader","target","result","readAsDataURL","componentDidMount","ReactDOM","findDOMNode","paint","componentDidUpdate","prevProps","prevState","clearRect","onImageChange","imageState","getInitialSize","onImageReady","onLoadSuccess","newHeight","newWidth","dimensions","canvasRatio","imageRatio","componentWillReceiveProps","newProps","scaleFactor","calculatePosition","save","globalCompositeOperation","restore","fillStyle","color","slice","join","borderSizeX","borderSizeY","beginPath","fill","render","defaultStyle","cursor","attributes","style","propTypes","PropTypes","number","oneOfType","string","instanceOf","arrayOf","shape","object","oneOf","func","onMouseUp","onMouseMove","onPositionChange","disableDrop","bool","defaultProps"],"mappings":"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","file":"0.dd56dd6841877312468e.hot-update.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst parseDOM = (str) => {\n    const parser = typeof DOMParser === 'undefined' ? null : new DOMParser()\n    if (!parser) {\n        return null\n    }\n    return parser.parseFromString(str, 'text/html')\n}\n\nconst retrieveImageURL = (dataTransferItems, callback) => {\n    for (let i = 0; i < dataTransferItems.length; i++) {\n        let item = dataTransferItems[i]\n\n        if (item.type === 'text/html') {\n            item.getAsString(value => {\n                const doc = parseDOM(value)\n                const img = doc.querySelector('img')\n                if (img && img.src) {\n                    callback(img.src)\n                }\n            })\n            break\n        }\n    }\n}\n\nconst isTouchDevice = !!(\n    typeof window !== 'undefined' &&\n    typeof navigator !== 'undefined' &&\n    ('ontouchstart' in window || navigator.msMaxTouchPoints > 0)\n)\n\nconst isFileAPISupported = typeof File !== 'undefined'\n\nconst draggableEvents = {\n    touch: {\n        react: {\n            down: 'onTouchStart',\n            mouseDown: 'onMouseDown',\n            drag: 'onTouchMove',\n            drop: 'onTouchEnd',\n            move: 'onTouchMove',\n            mouseMove: 'onMouseMove',\n            up: 'onTouchEnd',\n            mouseUp: 'onMouseUp'\n        },\n        native: {\n            down: 'touchstart',\n            mouseDown: 'mousedown',\n            drag: 'touchmove',\n            drop: 'touchend',\n            move: 'touchmove',\n            mouseMove: 'mousemove',\n            up: 'touchend',\n            mouseUp: 'mouseup'\n        }\n    },\n    desktop: {\n        react: {\n            down: 'onMouseDown',\n            drag: 'onDragOver',\n            drop: 'onDrop',\n            move: 'onMouseMove',\n            up: 'onMouseUp'\n        },\n        native: {\n            down: 'mousedown',\n            drag: 'dragStart',\n            drop: 'drop',\n            move: 'mousemove',\n            up: 'mouseup'\n        }\n    }\n}\nconst deviceEvents = isTouchDevice\n    ? draggableEvents.touch\n    : draggableEvents.desktop\n\nconst pixelRatio =\n    typeof window !== 'undefined' && window.devicePixelRatio\n        ? window.devicePixelRatio\n        : 1\n\n// Draws a rounded rectangle on a 2D context.\nconst drawRoundedRect = (context, x, y, width, height, borderRadius) => {\n    if (borderRadius === 0) {\n        context.rect(x, y, width, height)\n    } else {\n        const widthMinusRad = width - borderRadius\n        const heightMinusRad = height - borderRadius\n        context.translate(x, y)\n        context.arc(\n            borderRadius,\n            borderRadius,\n            borderRadius,\n            Math.PI,\n            Math.PI * 1.5\n        )\n        context.lineTo(widthMinusRad, 0)\n        context.arc(\n            widthMinusRad,\n            borderRadius,\n            borderRadius,\n            Math.PI * 1.5,\n            Math.PI * 2\n        )\n        context.lineTo(width, heightMinusRad)\n        context.arc(\n            widthMinusRad,\n            heightMinusRad,\n            borderRadius,\n            Math.PI * 2,\n            Math.PI * 0.5\n        )\n        context.lineTo(borderRadius, height)\n        context.arc(\n            borderRadius,\n            heightMinusRad,\n            borderRadius,\n            Math.PI * 0.5,\n            Math.PI\n        )\n        context.translate(-x, -y)\n    }\n}\n\nclass AvatarEditor extends React.Component {\n    static propTypes = {\n        scale: PropTypes.number,\n        rotate: PropTypes.number,\n        image: PropTypes.oneOfType([\n            PropTypes.string,\n            ...(isFileAPISupported ? [PropTypes.instanceOf(File)] : [])\n        ]),\n        border: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.arrayOf(PropTypes.number)\n        ]),\n        borderRadius: PropTypes.number,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        position: PropTypes.shape({\n            x: PropTypes.number,\n            y: PropTypes.number\n        }),\n        color: PropTypes.arrayOf(PropTypes.number),\n        style: PropTypes.object,\n        crossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\n        onDropFile: PropTypes.func,\n        onLoadFailure: PropTypes.func,\n        onLoadSuccess: PropTypes.func,\n        onImageReady: PropTypes.func,\n        onImageChange: PropTypes.func,\n        onMouseUp: PropTypes.func,\n        onMouseMove: PropTypes.func,\n        onPositionChange: PropTypes.func,\n\n        disableDrop: PropTypes.bool\n    }\n\n    static defaultProps = {\n        disableDrop: false,\n        scale: 1,\n        rotate: 0,\n        border: 25,\n        borderRadius: 0,\n        width: 200,\n        height: 200,\n        color: [0, 0, 0, 0.5],\n        style: {},\n        onDropFile () {},\n        onLoadFailure () {},\n        onLoadSuccess () {},\n        onImageReady () {},\n        onImageChange () {},\n        onMouseUp () {},\n        onMouseMove () {},\n        onPositionChange () {}\n    }\n\n    state = {\n        drag: false,\n        my: null,\n        mx: null,\n        image: {\n            x: 0.5,\n            y: 0.5\n        }\n    }\n\n    isVertical () {\n        return this.props.rotate % 180 !== 0\n    }\n\n    getBorders (border = this.props.border) {\n        return Array.isArray(border) ? border : [border, border]\n    }\n\n    getDimensions () {\n        const { width, height, rotate, border } = this.props\n\n        const canvas = {}\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const canvasWidth = width\n        const canvasHeight = height\n\n        if (this.isVertical()) {\n            canvas.width = canvasHeight\n            canvas.height = canvasWidth\n        } else {\n            canvas.width = canvasWidth\n            canvas.height = canvasHeight\n        }\n\n        canvas.width += borderX * 2\n        canvas.height += borderY * 2\n\n        return {\n            canvas,\n            rotate,\n            width,\n            height,\n            border\n        }\n    }\n\n    getImage () {\n        // get relative coordinates (0 to 1)\n        const cropRect = this.getCroppingRect()\n        const image = this.state.image\n\n        // get actual pixel coordinates\n        cropRect.x *= image.resource.width\n        cropRect.y *= image.resource.height\n        cropRect.width *= image.resource.width\n        cropRect.height *= image.resource.height\n\n        // create a canvas with the correct dimensions\n        const canvas = document.createElement('canvas')\n\n        if (this.isVertical()) {\n            canvas.width = cropRect.height\n            canvas.height = cropRect.width\n        } else {\n            canvas.width = cropRect.width\n            canvas.height = cropRect.height\n        }\n\n        // draw the full-size image at the correct position,\n        // the image gets truncated to the size of the canvas.\n        const context = canvas.getContext('2d')\n\n        context.translate(canvas.width / 2, canvas.height / 2)\n        context.rotate(this.props.rotate * Math.PI / 180)\n        context.translate(-(canvas.width / 2), -(canvas.height / 2))\n\n        if (this.isVertical()) {\n            context.translate(\n                (canvas.width - canvas.height) / 2,\n                (canvas.height - canvas.width) / 2\n            )\n        }\n\n        context.drawImage(image.resource, -cropRect.x, -cropRect.y)\n\n        return canvas\n    }\n\n    /**\n     * Get the image scaled to original canvas size.\n     * This was default in 4.x and is now kept as a legacy method.\n     */\n    getImageScaledToCanvas () {\n        const { width, height } = this.getDimensions()\n\n        const canvas = document.createElement('canvas')\n\n        if (this.isVertical()) {\n            canvas.width = height\n            canvas.height = width\n        } else {\n            canvas.width = width\n            canvas.height = height\n        }\n\n        // don't paint a border here, as it is the resulting image\n        this.paintImage(canvas.getContext('2d'), this.state.image, 0, 1)\n\n        return canvas\n    }\n\n    getXScale () {\n        const canvasAspect = this.props.width / this.props.height\n        const imageAspect = this.state.image.width / this.state.image.height\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getYScale () {\n        const canvasAspect = this.props.height / this.props.width\n        const imageAspect = this.state.image.height / this.state.image.width\n\n        return Math.min(1, canvasAspect / imageAspect)\n    }\n\n    getCroppingRect () {\n        const position = this.props.position || {\n                x: this.state.image.x,\n                y: this.state.image.y\n            }\n        const width = 1 / this.props.scale * this.getXScale()\n        const height = 1 / this.props.scale * this.getYScale()\n\n        const croppingRect = {\n            x: position.x - width / 2,\n            y: position.y - height / 2,\n            width,\n            height\n        }\n\n        let xMin = 0\n        let xMax = 1 - croppingRect.width\n        let yMin = 0\n        let yMax = 1 - croppingRect.height\n\n        // If the cropping rect is larger than the image, then we need to change\n        // our maxima & minima for x & y to allow the image to appear anywhere up\n        // to the very edge of the cropping rect.\n        const isLargerThanImage = width > 1 || height > 1\n\n        if (isLargerThanImage) {\n            xMin = -croppingRect.width\n            xMax = 1\n            yMin = -croppingRect.height\n            yMax = 1\n        }\n\n        return {\n            ...croppingRect,\n            x: Math.max(xMin, Math.min(croppingRect.x, xMax)),\n            y: Math.max(yMin, Math.min(croppingRect.y, yMax))\n        }\n    }\n\n    isDataURL (str) {\n        if (str === null) {\n            return false\n        }\n        const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*\\s*$/i\n        return !!str.match(regex)\n    }\n\n    loadImage (image) {\n        if (isFileAPISupported && image instanceof File) {\n            this.loadImageFile(image)\n        } else if (typeof image === 'string') {\n            this.loadImageURL(image)\n        }\n    }\n\n    loadImageURL (imageURL) {\n        const imageObj = new Image()\n        imageObj.onload = this.handleImageReady.bind(this, imageObj)\n        imageObj.onerror = this.props.onLoadFailure\n        if (!this.isDataURL(imageURL) && this.props.crossOrigin) { imageObj.crossOrigin = this.props.crossOrigin }\n        imageObj.src = imageURL\n    }\n\n    loadImageFile (imageFile) {\n        const reader = new FileReader()\n        reader.onload = e => this.loadImageURL(e.target.result)\n        reader.readAsDataURL(imageFile)\n    }\n\n    componentDidMount () {\n        const context = ReactDOM.findDOMNode(this.canvas).getContext('2d')\n        if (this.props.image) {\n            this.loadImage(this.props.image)\n        }\n        this.paint(context)\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        const canvas = ReactDOM.findDOMNode(this.canvas)\n        const context = canvas.getContext('2d')\n        context.clearRect(0, 0, canvas.width, canvas.height)\n        this.paint(context)\n        this.paintImage(context, this.state.image, this.props.border)\n\n        if (\n            prevProps.image !== this.props.image ||\n            prevProps.width !== this.props.width ||\n            prevProps.height !== this.props.height ||\n            prevProps.position !== this.props.position ||\n            prevProps.scale !== this.props.scale ||\n            prevProps.rotate !== this.props.rotate ||\n            prevState.my !== this.state.my ||\n            prevState.mx !== this.state.mx ||\n            prevState.image.x !== this.state.image.x ||\n            prevState.image.y !== this.state.image.y\n        ) {\n            this.props.onImageChange()\n        }\n    }\n\n    handleImageReady (image) {\n        const imageState = this.getInitialSize(image.width, image.height)\n        imageState.resource = image\n        imageState.x = 0.5\n        imageState.y = 0.5\n        this.setState({ drag: false, image: imageState }, this.props.onImageReady)\n        this.props.onLoadSuccess(imageState)\n    }\n\n    getInitialSize (width, height) {\n        let newHeight\n        let newWidth\n\n        const dimensions = this.getDimensions()\n        const canvasRatio = dimensions.height / dimensions.width\n        const imageRatio = height / width\n\n        if (canvasRatio > imageRatio) {\n            newHeight = this.getDimensions().height\n            newWidth = width * (newHeight / height)\n        } else {\n            newWidth = this.getDimensions().width\n            newHeight = height * (newWidth / width)\n        }\n\n        return {\n            height: newHeight,\n            width: newWidth\n        }\n    }\n\n    componentWillReceiveProps (newProps) {\n        if (\n            (newProps.image && this.props.image !== newProps.image) ||\n            this.props.width !== newProps.width ||\n            this.props.height !== newProps.height\n        ) {\n            this.loadImage(newProps.image)\n        }\n    }\n\n    paintImage (context, image, border, scaleFactor = pixelRatio) {\n        if (image.resource) {\n            const position = this.calculatePosition(image, border)\n\n            context.save()\n\n            context.translate(context.canvas.width / 2, context.canvas.height / 2)\n            context.rotate(this.props.rotate * Math.PI / 180)\n            context.translate(\n                -(context.canvas.width / 2),\n                -(context.canvas.height / 2)\n            )\n\n            if (this.isVertical()) {\n                context.translate(\n                    (context.canvas.width - context.canvas.height) / 2,\n                    (context.canvas.height - context.canvas.width) / 2\n                )\n            }\n\n            context.scale(scaleFactor, scaleFactor)\n\n            context.globalCompositeOperation = 'destination-over'\n            context.drawImage(\n                image.resource,\n                position.x,\n                position.y,\n                position.width,\n                position.height\n            )\n\n            context.restore()\n        }\n    }\n\n    calculatePosition (image, border) {\n        image = image || this.state.image\n\n        const [borderX, borderY] = this.getBorders(border)\n\n        const croppingRect = this.getCroppingRect()\n\n        const width = image.width * this.props.scale\n        const height = image.height * this.props.scale\n\n        let x = -croppingRect.x * width\n        let y = -croppingRect.y * height\n\n        if (this.isVertical()) {\n            x += borderY\n            y += borderX\n        } else {\n            x += borderX\n            y += borderY\n        }\n\n        return {\n            x,\n            y,\n            height,\n            width\n        }\n    }\n\n    paint (context) {\n        context.save()\n        context.scale(pixelRatio, pixelRatio)\n        context.translate(0, 0)\n        context.fillStyle = 'rgba(' + this.props.color.slice(0, 4).join(',') + ')'\n\n        let borderRadius = this.props.borderRadius\n        const dimensions = this.getDimensions()\n        const [borderSizeX, borderSizeY] = this.getBorders(dimensions.border)\n        const height = dimensions.canvas.height\n        const width = dimensions.canvas.width\n\n        // clamp border radius between zero (perfect rectangle) and half the size without borders (perfect circle or \"pill\")\n        borderRadius = Math.max(borderRadius, 0)\n        borderRadius = Math.min(\n            borderRadius,\n            width / 2 - borderSizeX,\n            height / 2 - borderSizeY\n        )\n\n        context.beginPath()\n        // inner rect, possibly rounded\n        drawRoundedRect(\n            context,\n            borderSizeX,\n            borderSizeY,\n            width - borderSizeX * 2,\n            height - borderSizeY * 2,\n            borderRadius\n        )\n        context.rect(width, 0, -width, height) // outer rect, drawn \"counterclockwise\"\n        context.fill('evenodd')\n\n        context.restore()\n    }\n\n    handleMouseDown = (e) => {\n        e = e || window.event\n        // if e is a touch event, preventDefault keeps\n        // corresponding mouse events from also being fired\n        // later.\n        e.preventDefault()\n        this.setState({\n            drag: true,\n            mx: null,\n            my: null\n        })\n    }\n\n    handleDragOver = (e) => {\n        e = e || window.event\n        e.preventDefault()\n    }\n\n    handleDrop = (e = window.event) => {\n        e.stopPropagation()\n        e.preventDefault()\n\n        if (e.dataTransfer) {\n            const { files, items } = e.dataTransfer\n\n            if (files && files.length) {\n                this.props.onDropFile(e)\n                this.loadImageFile(files[0])\n            } else if (items && items.length) {\n                retrieveImageUrl(items, src => this.loadImage(src))\n            }\n        }\n    }\n\n    setCanvas = (canvas) => {\n        this.canvas = canvas\n    }\n\n    render () {\n        const dimensions = this.getDimensions()\n        const defaultStyle = {\n            width: dimensions.canvas.width,\n            height: dimensions.canvas.height,\n            cursor: this.state.drag ? 'grabbing' : 'grab'\n        }\n\n        const attributes = {\n            width: dimensions.canvas.width * pixelRatio,\n            height: dimensions.canvas.height * pixelRatio,\n            style: {\n                ...defaultStyle,\n                ...this.props.style\n            }\n        }\n\n        // attributes[deviceEvents.react.down] = this.handleMouseDown\n        // attributes[deviceEvents.react.drag] = this.handleDragOver\n        // if (!this.props.disableDrop) { attributes[deviceEvents.react.drop] = this.handleDrop }\n        // if (isTouchDevice) { attributes[deviceEvents.react.mouseDown] = this.handleMouseDown }\n\n        return <canvas ref={this.setCanvas} {...attributes} />\n    }\n}\n\nexport default AvatarEditor\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/ImageRotater.jsx"],"sourceRoot":""}