{"version":3,"sources":["webpack:///./components/editAlbum/EditCanvas.jsx"],"names":["routesModule","require","EditCanvas","React","Component","constructor","props","state","angle","width","height","getEditedImage","album","image","avatar","getImage","toBlob","img","name","split","length","file","File","http","sendFile","routes","UPLOAD_FOTO","then","downloadedFoto","doPost","FOTO_ROUTE","src","_id","result","newPictures","images","push","newAlbum","Object","assign","cleanImage","imageDownloaded","rotateImage","newAngle","calculateParameters","setState","parseInt","naturalWidth","naturalHeight","onLoad","imgInfo","resource","render","ae","e","preventDefault"],"mappings":"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","file":"0.3ed3d77b6715e731984b.hot-update.js","sourcesContent":["import React from 'react';\nimport './editCanvas.less';\nimport {CrossIcon, EditIcon, RotateIcon, SaveIcon} from \"../Icons\";\nimport AvatarEditor from \"react-avatar-editor\";\nconst routesModule = require('../../constants/routes');\nimport http from '../../HttpService';\n\nclass EditCanvas extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            angle: 0,\n            width: 200,\n            height: 200\n        }\n    }\n\n    getEditedImage() {\n        const {album, image} = this.props;\n        this.avatar.getImage().toBlob(img => {\n            let name = image.split('/');\n            name = name[name.length - 1];\n            const file = new File([img], name);\n\n            http.sendFile(routesModule.routes.UPLOAD_FOTO, file)\n                .then(downloadedFoto => {\n                    http.doPost(routesModule.routes.FOTO_ROUTE, {\n                        src: downloadedFoto.src,\n                        album: album._id\n                    }).then(result => {\n                            const newPictures = [...album.images];\n                            newPictures.push(result);\n                            const newAlbum = Object.assign({}, {\n                                ...album,\n                                images: newPictures,\n                            });\n\n                            this.props.cleanImage({\n                                imageDownloaded: null,\n                                album: newAlbum\n                            });\n                        });\n                });\n        });\n    }\n\n    rotateImage() {\n        const newAngle = this.state.angle + 90;\n        this.calculateParameters(newAngle);\n    }\n\n    calculateParameters(newAngle) {\n        if(newAngle % 180 == 0) {\n            this.setState({\n                width: parseInt(this.naturalWidth * this.state.height / this.naturalHeight),\n                height: 200,\n                angle : newAngle\n            });\n        } else {\n            this.setState({\n                height: parseInt(this.naturalHeight * this.state.height / this.naturalWidth),\n                width: 200,\n                // width: parseInt(this.naturalHeight * this.state.height / this.naturalWidth),\n                // height: 200,\n                angle : newAngle\n            });\n        }\n    }\n\n    onLoad(imgInfo) {\n        this.naturalWidth = imgInfo.resource.naturalWidth;\n        this.naturalHeight = imgInfo.resource.naturalHeight;\n\n        this.calculateParameters(this.state.angle);\n        // this.setState({\n        //     width: imgInfo.resource.naturalWidth * this.state.height / imgInfo.resource.naturalHeight,\n        // });\n    }\n\n    // onChangeImage() {\n    //     if(this.state.angle % 180 == 0) {\n    //         this.setState({\n    //             width: this.naturalWidth * this.state.height / this.naturalHeight,\n    //             height: 200\n    //         });\n    //     } else {\n    //         this.setState({\n    //             width: this.naturalHeight * this.state.height / this.naturalWidth,\n    //             height: 200\n    //         });\n    //     }\n    // }\n\n    render() {\n        const {image} = this.props;\n        const {angle, width, height} = this.state;\n        return <div className=\"Edit_canvas\">\n            <AvatarEditor\n                ref={ae => this.avatar = ae}\n                image={image}\n                rotate={angle}\n                width={width}\n                height={height}\n                onLoadSuccess={(imgInfo) => this.onLoad(imgInfo)}\n                onMouseMove={e => e.preventDefault}\n                //onImageChange={() => this.onChangeImage()}\n                // onDropFile={() => this.onChangeImage()}\n                // onImageReady={() => this.onChangeImage()}\n                //\n                // onPositionChange={() => this.onChangeImage()}\n\n            />\n            <RotateIcon className='rotate_icon' onClick={() => this.rotateImage()}/>\n            <SaveIcon className='save_icon' onClick={() => this.getEditedImage()}/></div>\n    }\n}\n\nexport default EditCanvas;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditCanvas.jsx"],"sourceRoot":""}