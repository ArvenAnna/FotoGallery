{"version":3,"sources":["webpack:///./actions/albumActions.js"],"names":["routesModule","require","PAGE_ITEMS","albumsRequest","type","REQ_ALBUMS","setAlbums","result","fetchAlbums","offset","perPage","pagesOffset","itemsPerPage","dispatch","http","doGet","routes","GET_ALBUMS_PAGINATE","then","catch","e","Alert","error","response","data","fetchAlbumsBySearch","search","GET_ALBUMS_SEARCH","deleteFotoFromAlbum","id","doDelete","DELETE_FOTO","success","deleteAlbum","DELETE_ALBUM","saveFotoDescription","album","image","doPut","UPDATE_FOTO","saveAlbumDescription","ALBUM_ROUTE","saveItemsOrder","UPDATE_ITEMS_ORDER","createAlbum","doPost"],"mappings":"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","file":"0.2265907eac8fc0546675.hot-update.js","sourcesContent":["import * as types from '../constants/ActionTypes';\nimport http from '../HttpService';\nconst routesModule = require('../constants/routes');\nimport Alert from 'react-s-alert';\n\nexport const PAGE_ITEMS = 3;\n\nexport function albumsRequest() {\n    return {\n        type: types.REQ_ALBUMS\n    };\n}\n\nexport function setAlbums(result) {\n    return {\n        type: types.SET_ALBUMS,\n        result: result\n    };\n}\n\nexport function fetchAlbums(offset, perPage) {\n    const pagesOffset = offset | 0;\n    const itemsPerPage = perPage | PAGE_ITEMS;\n    return dispatch => {\n        dispatch(albumsRequest());\n        return http\n            .doGet(routesModule.routes.GET_ALBUMS_PAGINATE(pagesOffset, itemsPerPage))\n            .then(result => {\n                dispatch(setAlbums(result));\n            })\n            .catch(e => {\n                Alert.error(e.response.data.error, {});\n                dispatch({type: types.REQ_ALBUMS_ERROR});\n            });\n    }\n}\n\nexport function fetchAlbumsBySearch(search) {\n    return dispatch => {\n        dispatch(albumsRequest());\n        return http\n            .doGet(routesModule.routes.GET_ALBUMS_SEARCH(search))\n            .then(result => {\n                dispatch(setAlbums(result));\n                dispatch({type: types.REQ_ALBUMS_ERROR});\n            })\n            .catch(e => Alert.error(e.response.data.error, {}));\n    }\n}\n\nexport function deleteFotoFromAlbum(id) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doDelete(routesModule.routes.DELETE_FOTO(id))\n            .then(result => Alert.success('Album deleted', {}))\n            .catch(e => Alert.error(e.response.data.error, {}));\n            //.then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function deleteAlbum(id) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doDelete(routesModule.routes.DELETE_ALBUM(id))\n            .then(result => dispatch(fetchAlbums()))\n            .catch(e => Alert.error(e.response.data.error, {}));\n    }\n}\n\nexport function saveFotoDescription(album, image) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.UPDATE_FOTO(album), image)\n            .catch(e => Alert.error(e.response.data.error, {}));\n            //.then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveAlbumDescription(album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.ALBUM_ROUTE, album)\n            .catch(e => Alert.error(e.response.data.error, {}));\n            //.then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveItemsOrder(album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.UPDATE_ITEMS_ORDER, album)\n            .catch(e => Alert.error(e.response.data.error, {}));\n            //.then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function createAlbum(album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPost(routesModule.routes.ALBUM_ROUTE, album)\n            .then(result => {\n                Alert.success('Album created', {});\n                dispatch(fetchAlbums());\n            })\n            .catch(e => Alert.error(e.response.data.error, {}));\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./actions/albumActions.js"],"sourceRoot":""}