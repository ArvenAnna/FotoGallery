{"version":3,"sources":["webpack:///./components/AlbumContainer.jsx","webpack:///./actions/albumActions.js","webpack:///./components/editAlbum/EditAlbum.jsx"],"names":["Container","styled","div","AlbumContainer","connect","store","albums","fetchAlbums","React","Component","constructor","props","render","map","album","images","id","routesModule","require","albumsRequest","type","REQ_ALBUMS","setAlbums","dispatch","http","doGet","routes","GET_ALBUMS","then","result","deleteFotoFromAlbum","doDelete","DELETE_FOTO","saveFotoDescription","image","doPut","UPDATE_FOTO","saveAlbumDescription","ALBUM_ROUTE","EditAlbum","state","dragStarted","dragFrom","dragFromEl","dragObj","openPicture","openedAlbum","componentDidMount","GET_ALBUM","match","params","setState","openDetails","picture","openAlbumDetails","onCrossClick","deleteItem","newPictures","filter","p","newAlbum","Object","assign","changeDragState","obj","editedPicture","find","pinput","value","name","ptextarea","text","editedAlbum","ainput","atextarea","description","console","dir","src","sort","x","y","order","target","replaceImage","i","t"],"mappings":"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","file":"0.49d64e274980a84d2bb0.hot-update.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Picture from \"./picture/Picture\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {fetchAlbums} from \"../actions/albumActions\";\n\n// overrides picture styles\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding: 2rem;\n\n  &>div {\n     padding: 1rem;\n        \n     .image {\n        height: 15rem;\n        width: 20rem;\n        object-fit: cover;\n      }\n\n      .image_wrapper .overlay .overlay_bottom_text {\n         font-size: 1rem;\n      }\n  }\n`\n@connect(store => ({\n    albums: store.albums\n}), {\n    fetchAlbums\n})\nclass AlbumContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.fetchAlbums();\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.albums.map(album => <Picture main={album.images[0]}\n                                                         key={album.id}\n                                                         animation='fade'\n                                                         editRoute={`/edit/${album.id}`}\n                                                         images={album.images}/>)}\n\n            </Container>\n        );\n    }\n}\n\nexport default AlbumContainer;\n\n\n// WEBPACK FOOTER //\n// ./components/AlbumContainer.jsx","import * as types from '../constants/ActionTypes';\nimport http from '../HttpService';\nconst routesModule = require('../constants/routes');\n\nexport function albumsRequest() {\n    return {\n        type: types.REQ_ALBUMS\n    };\n}\n\nexport function setAlbums(albums) {\n    return {\n        type: types.SET_ALBUMS,\n        albums\n    };\n}\n\nexport function fetchAlbums() {\n    return dispatch => {\n        dispatch(albumsRequest());\n        return http\n            .doGet(routesModule.routes.GET_ALBUMS)\n            .then(result => dispatch(setAlbums(result)));\n    }\n}\n\n// export function deleteFotoRequest() {\n//     return {\n//         type: types.REQ_ALBUMS\n//     };\n// }\n\nexport function deleteFotoFromAlbum(id, album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doDelete(routesModule.routes.DELETE_FOTO(id, album))\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveFotoDescription(album, image) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.UPDATE_FOTO(album), image)\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\nexport function saveAlbumDescription(album) {\n    return dispatch => {\n        //dispatch(albumsRequest());\n        return http\n            .doPut(routesModule.routes.ALBUM_ROUTE, album)\n            .then(result => dispatch(fetchAlbums()));\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./actions/albumActions.js","import React from 'react';\nimport './editAlbum.less';\nimport FileInput from \"../fileInput/FileInput\";\nimport {CrossIcon, SaveIcon} from \"../Icons\";\nimport Card from \"./Card\";\nimport http from '../../HttpService';\nimport connect from \"react-redux/es/connect/connect\";\nimport {deleteFotoFromAlbum, saveAlbumDescription, saveFotoDescription} from \"../../actions/albumActions\";\nconst routesModule = require('../../constants/routes');\n\n@connect(store => ({}), {\n    deleteFotoFromAlbum,\n    saveFotoDescription,\n    saveAlbumDescription\n})\nclass EditAlbum extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dragStarted: false,\n            dragFrom: null,\n            dragFromEl: null,\n            dragObj: null,\n            openPicture: null,\n            openedAlbum: false,\n            album: null\n        }\n    }\n\n    componentDidMount() {\n        http.doGet(routesModule.routes.GET_ALBUM(this.props.match.params.id))\n            .then(result => this.setState({album: result}));\n    }\n\n    openDetails(picture) {\n        this.setState({openPicture: picture});\n    }\n\n    openAlbumDetails() {\n        this.setState({openedAlbum: true});\n    }\n\n    onCrossClick() {\n        this.setState({openPicture: null, openedAlbum: false});\n    }\n\n    deleteItem(picture) {\n        this.props.deleteFotoFromAlbum(picture.id, this.state.album.id);\n        const newPictures = this.state.album.images.filter(p => p.id != picture.id);\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        })\n        this.setState({album: newAlbum});\n    }\n\n    changeDragState(obj) {\n        this.setState(obj);\n    }\n\n    saveFotoDescription(picture) {\n        const newPictures = [...this.state.album.images];\n        const editedPicture = this.state.album.images.find(p => p.id == picture.id);\n        if (this.pinput.value) editedPicture.name = this.pinput.value;\n        if (this.ptextarea.value) editedPicture.text = this.ptextarea.value;\n\n        this.props.saveFotoDescription(this.state.album.id, editedPicture);\n\n        const newAlbum = Object.assign({}, {\n            ...this.state.album,\n            images: newPictures,\n        });\n        this.setState({album: newAlbum, openPicture: null});\n    }\n\n    saveAlbumDescription() {\n        const editedAlbum = Object.assign({}, {...this.state.album});\n        if (this.ainput.value) editedAlbum.name = this.ainput.value;\n        if (this.atextarea.value) editedAlbum.description = this.atextarea.value;\n\n        this.props.saveAlbumDescription(this.state.album);\n\n        this.setState({album: editedAlbum, openedAlbum: false});\n    }\n\n    render() {\n        const {openPicture, album, openedAlbum} = this.state;\n        if(album) {\n            console.dir(album.images);\n\n        }\n        return album && (\n                    <div className='edit_container'>\n                        <div className='edit_album_card'>\n                            <img className='album_image' src={album.images[0].src}/>\n                            <div className='album_name' onClick={() => this.openAlbumDetails()}>{album.name}</div>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>\n                        {album.images.sort((x, y) => x.order - y.order).map(p => <Card\n                            key={p.id}\n                            picture={p}\n                            pictures={album.images}\n                            openDetails={(p) => this.openDetails(p)}\n                            deleteItem={(p) => this.deleteItem(p)}\n                            replaceImage={(target) => this.replaceImage(target)}\n                            openPicture={openPicture}\n                            changeDragState={(obj) => this.changeDragState(obj)}\n                            dragState={this.state}\n                        />)}\n                        <FileInput className='new_image' disabled={openPicture} label='Choose new foto'/>\n                        {openPicture &&\n                        <div className='new_text'>\n                            <input defaultValue={openPicture.name} ref={i => this.pinput = i}/>\n                            <textarea defaultValue={openPicture.text} ref={t => this.ptextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveFotoDescription(openPicture)}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                        {openedAlbum &&\n                        <div className='new_text'>\n                            <input defaultValue={album.name} ref={i => this.ainput = i}/>\n                            <textarea defaultValue={album.description} ref={t => this.atextarea = t}/>\n                            <SaveIcon className='save_icon' onClick={() => this.saveAlbumDescription()}/>\n                            <CrossIcon className='cross_icon' onClick={() => this.onCrossClick()}/>\n                        </div>}\n                    </div>\n            );\n    }\n}\n\nexport default EditAlbum;\n\n\n\n// WEBPACK FOOTER //\n// ./components/editAlbum/EditAlbum.jsx"],"sourceRoot":""}