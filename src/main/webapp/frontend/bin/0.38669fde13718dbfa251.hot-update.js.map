{"version":3,"sources":["webpack:///./components/picture/GMap.js"],"names":["GMap","React","Component","constructor","props","state","selectedPlace","currentLocation","location","setState","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","onCrossClick","close","onMarkerClick","marker","e","console","log","onInfoWindowClose","g","onMapClicked","render","google","fotos","map","foto","name","GoogleApiWrapper","apiKey"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;IAEMA,I,GAAN,MAAMA,IAAN,SAAmB,6CAAAC,CAAMC,SAAzB,CAAmC;;AAE/BC,gBAAYC,KAAZ,EAAmB;AACf,cAAMA,KAAN;AACA;AACA;AACA;AACA,aAAKC,KAAL,GAAa;AACTC,2BAAe,EADN;AAETC,6BAAiB;AAFR,SAAb;AAIA,YAAI,KAAKH,KAAL,CAAWI,QAAf,EAAyB;AACrB,iBAAKC,QAAL,CAAc,EAAEF,iBAAiBH,MAAMI,QAAzB,EAAd;AACH,SAFD,MAEO,IAAIE,aAAaA,UAAUC,WAA3B,EAAwC;AAC3CD,sBAAUC,WAAV,CAAsBC,kBAAtB,CAA0CC,GAAD,IAAS;AAC9C,sBAAMC,SAASD,IAAIC,MAAnB;AACA,qBAAKL,QAAL,CAAc;AACVF,qCAAiB;AACbQ,6BAAKD,OAAOE,QADC;AAEbC,6BAAKH,OAAOI;AAFC;AADP,iBAAd;AAMH,aARD;AASH;AAEJ;;AAEDC,mBAAe;AACX,aAAKf,KAAL,CAAWgB,KAAX;AACH;;AAEDC,kBAAcjB,KAAd,EAAqBkB,MAArB,EAA6BC,CAA7B,EAAgC;AAC5BC,gBAAQC,GAAR,CAAYrB,KAAZ;AACH;;AAEDsB,sBAAkBC,CAAlB,EAAqB;AACjBH,gBAAQC,GAAR,CAAYE,CAAZ;AACH;;AAEDC,iBAAaD,CAAb,EAAgB;AACZH,gBAAQC,GAAR,CAAYE,CAAZ;AACH;;AAEDE,aAAS;;AAEL,YAAI,CAAC,KAAKxB,KAAL,CAAWE,eAAZ,IAA+B,CAAC,KAAKF,KAAL,CAAWE,eAAX,CAA2BQ,GAA/D,EAAoE,OAAO,IAAP;;AAEpE,eAAO;AAAA;AAAA,cAAK,WAAU,eAAf;AACH,wEAAC,yDAAD,IAAW,WAAU,OAArB;AACW,yBAAS,MAAM,KAAKI,YAAL,EAD1B,GADG;AAGH;AAAC,sEAAD;AAAA;AACI,4BAAQ,KAAKf,KAAL,CAAW0B,MADvB;AAEI,0BAAM,EAFV;AAGI,mCAAgB,KAAKzB,KAAL,CAAWE,eAH/B;AAII,6BAAS,KAAKqB;AAJlB;AAOK,qBAAKxB,KAAL,CAAW2B,KAAX,IAAoB,KAAK3B,KAAL,CAAW2B,KAAX,CAAiBC,GAAjB,CAAqBC,QAAQ,4DAAC,yDAAD;AAC1C,0BAAMA,KAAKC,IAD+B;AAE1C,8BAAUD,KAAKzB;AAF2B,kBAA7B,CAPzB;AAkBI,4EAAC,yDAAD;AACI,0BAAM,cADV;AAEI,8BAAU,EAACO,KAAK,SAAN,EAAiBE,KAAK,CAAC,UAAvB,EAFd;AAGI,2BAAO;AAHX;AAlBJ;AAHG,SAAP;AA2CH;AA1F8B,C;;;AA6FnC,yDAAe,2EAAAkB,CAAiB;AAC5BC,YAAS;AADmB,CAAjB,EAEZpC,IAFY,CAAf,E","file":"0.38669fde13718dbfa251.hot-update.js","sourcesContent":["import React from 'react';\nimport {CrossIcon} from \"../Icons\";\nimport './map.less';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nclass GMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // this.pictureLocation = {\n        //     lat: 37.759703, lng: -122.428093\n        // }\n        this.state = {\n            selectedPlace: {},\n            currentLocation: {}\n        }\n        if (this.props.location) {\n            this.setState({ currentLocation: props.location });\n        } else if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((pos) => {\n                const coords = pos.coords;\n                this.setState({\n                    currentLocation: {\n                        lat: coords.latitude,\n                        lng: coords.longitude\n                    }\n                })\n            })\n        }\n\n    }\n\n    onCrossClick() {\n        this.props.close();\n    }\n\n    onMarkerClick(props, marker, e) {\n        console.log(props);\n    }\n\n    onInfoWindowClose(g) {\n        console.log(g);\n    }\n\n    onMapClicked(g) {\n        console.log(g);\n    }\n\n    render() {\n\n        if (!this.state.currentLocation || !this.state.currentLocation.lat) return null;\n\n        return <div className=\"map_container\">\n            <CrossIcon className='cross'\n                       onClick={() => this.onCrossClick()}/>\n            <Map\n                google={this.props.google}\n                zoom={14}\n                initialCenter={ this.state.currentLocation }\n                onClick={this.onMapClicked}\n            >\n\n                {this.props.fotos && this.props.fotos.map(foto => <Marker\n                        name={foto.name}\n                        position={foto.location}\n                />)}\n\n                {/*<Marker onClick={this.onMarkerClick}*/}\n                        {/*name={'Current location'} />*/}\n                {/*<Marker*/}\n                    {/*title={'The marker`s title will appear as a tooltip.'}*/}\n                    {/*name={'SOMA'}*/}\n                    {/*position={{lat: 37.778519, lng: -122.405640}} />*/}\n                <Marker\n                    name={'Dolores park'}\n                    position={{lat: 37.759703, lng: -122.428093}}\n                    title={'The marker`s title will appear as a tooltip.'}\n                />\n                {/*<Marker />*/}\n                {/*<Marker*/}\n                    {/*name={'Your position'}*/}\n                    {/*position={{lat: 37.762391, lng: -122.439192}}*/}\n                    {/*icon={{*/}\n                        {/*url: \"/path/to/custom_icon.png\",*/}\n                        {/*anchor: new google.maps.Point(32,32),*/}\n                        {/*scaledSize: new google.maps.Size(64,64)*/}\n                    {/*}} />*/}\n\n                {/*<InfoWindow onClose={this.onInfoWindowClose}>*/}\n                    {/*<div>*/}\n                        {/*<h1>{this.state.selectedPlace.name}</h1>*/}\n                    {/*</div>*/}\n                {/*</InfoWindow>*/}\n            </Map>\n        </div>\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyDWNe8nbXT808Y9VT3ei5JbVBR-jBK-Y0s\")\n})(GMap)\n\n\n// WEBPACK FOOTER //\n// ./components/picture/GMap.js"],"sourceRoot":""}