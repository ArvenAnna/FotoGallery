{"version":3,"sources":["webpack:///./components/picture/GMap.js"],"names":["GMap","React","Component","constructor","props","state","selectedPlace","currentLocation","onCrossClick","close","onMarkerClick","marker","e","console","log","onInfoWindowClose","g","onMapClicked","render","navigator","geolocation","getCurrentPosition","pos","coords","setState","lat","latitude","lng","longitude","google","GoogleApiWrapper","apiKey"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;IAEMA,I,GAAN,MAAMA,IAAN,SAAmB,6CAAAC,CAAMC,SAAzB,CAAmC;;AAE/BC,gBAAYC,KAAZ,EAAmB;AACf,cAAMA,KAAN;AACA,aAAKC,KAAL,GAAa;AACTC,2BAAe,EADN;AAETC,6BAAiB;AAFR,SAAb;AAIH;;AAEDC,mBAAe;AACX,aAAKJ,KAAL,CAAWK,KAAX;AACH;;AAEDC,kBAAcN,KAAd,EAAqBO,MAArB,EAA6BC,CAA7B,EAAgC;AAC5BC,gBAAQC,GAAR,CAAYV,KAAZ;AACH;;AAEDW,sBAAkBC,CAAlB,EAAqB;AACjBH,gBAAQC,GAAR,CAAYE,CAAZ;AACH;;AAEDC,iBAAaD,CAAb,EAAgB;AACZH,gBAAQC,GAAR,CAAYE,CAAZ;AACH;;AAEDE,aAAS;AACL,YAAIC,aAAaA,UAAUC,WAA3B,EAAwC;AACpCD,sBAAUC,WAAV,CAAsBC,kBAAtB,CAA0CC,GAAD,IAAS;AAC9C,sBAAMC,SAASD,IAAIC,MAAnB;AACA,qBAAKC,QAAL,CAAc;AACVjB,qCAAiB;AACbkB,6BAAKF,OAAOG,QADC;AAEbC,6BAAKJ,OAAOK;AAFC;AADP,iBAAd;AAMH,aARD;AASH;AACD;;AAEA,eAAO;AAAA;AAAA,cAAK,WAAU,eAAf;AACH,wEAAC,yDAAD,IAAW,WAAU,OAArB;AACW,yBAAS,MAAM,KAAKpB,YAAL,EAD1B,GADG;AAGH;AAAC,sEAAD;AAAA;AACI,4BAAQ,KAAKJ,KAAL,CAAWyB,MADvB;AAEI,0BAAM,EAFV;AAGI,mCAAgB,KAAKxB,KAAL,CAAWE,eAH/B;AAII,6BAAS,KAAKU;AAJlB;AAaI,4EAAC,yDAAD;AACI,0BAAM,cADV;AAEI,8BAAU,EAACQ,KAAK,SAAN,EAAiBE,KAAK,CAAC,UAAvB,EAFd,GAbJ;AAgBI,4EAAC,yDAAD;AAhBJ;AAHG,SAAP;AAoCH;AA5E8B,C;;;AA+EnC,yDAAe,2EAAAG,CAAiB;AAC5BC,YAAS;AADmB,CAAjB,EAEZ/B,IAFY,CAAf,E","file":"0.30852ca67a99cb29d73f.hot-update.js","sourcesContent":["import React from 'react';\nimport {CrossIcon} from \"../Icons\";\nimport './map.less';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nclass GMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedPlace: {},\n            currentLocation: {}\n        }\n    }\n\n    onCrossClick() {\n        this.props.close();\n    }\n\n    onMarkerClick(props, marker, e) {\n        console.log(props);\n    }\n\n    onInfoWindowClose(g) {\n        console.log(g);\n    }\n\n    onMapClicked(g) {\n        console.log(g);\n    }\n\n    render() {\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((pos) => {\n                const coords = pos.coords;\n                this.setState({\n                    currentLocation: {\n                        lat: coords.latitude,\n                        lng: coords.longitude\n                    }\n                })\n            })\n        }\n        //if (!this.state.currentLocation || !this.state.currentLocation.latitude) return null;\n\n        return <div className=\"map_container\">\n            <CrossIcon className='cross'\n                       onClick={() => this.onCrossClick()}/>\n            <Map\n                google={this.props.google}\n                zoom={14}\n                initialCenter={ this.state.currentLocation }\n                onClick={this.onMapClicked}\n            >\n\n                {/*<Marker onClick={this.onMarkerClick}*/}\n                        {/*name={'Current location'} />*/}\n                {/*<Marker*/}\n                    {/*title={'The marker`s title will appear as a tooltip.'}*/}\n                    {/*name={'SOMA'}*/}\n                    {/*position={{lat: 37.778519, lng: -122.405640}} />*/}\n                <Marker\n                    name={'Dolores park'}\n                    position={{lat: 37.759703, lng: -122.428093}} />\n                <Marker />\n                {/*<Marker*/}\n                    {/*name={'Your position'}*/}\n                    {/*position={{lat: 37.762391, lng: -122.439192}}*/}\n                    {/*icon={{*/}\n                        {/*url: \"/path/to/custom_icon.png\",*/}\n                        {/*anchor: new google.maps.Point(32,32),*/}\n                        {/*scaledSize: new google.maps.Size(64,64)*/}\n                    {/*}} />*/}\n\n                {/*<InfoWindow onClose={this.onInfoWindowClose}>*/}\n                    {/*<div>*/}\n                        {/*<h1>{this.state.selectedPlace.name}</h1>*/}\n                    {/*</div>*/}\n                {/*</InfoWindow>*/}\n            </Map>\n        </div>\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyDWNe8nbXT808Y9VT3ei5JbVBR-jBK-Y0s\")\n})(GMap)\n\n\n// WEBPACK FOOTER //\n// ./components/picture/GMap.js"],"sourceRoot":""}